<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Steven&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-27T11:45:33.980Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>海边</title>
    <link href="http://example.com/2021/06/25/%E6%B5%B7%E8%BE%B9/"/>
    <id>http://example.com/2021/06/25/%E6%B5%B7%E8%BE%B9/</id>
    <published>2021-06-25T09:16:45.000Z</published>
    <updated>2022-06-27T11:45:33.980Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/06/27/K7oZyY2nqxNcFlG.jpg" /></p><p>到海边走走</p>]]></content>
    
    
    <summary type="html">考完试了，到海边走走</summary>
    
    
    
    <category term="生活" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="海边" scheme="http://example.com/tags/%E6%B5%B7%E8%BE%B9/"/>
    
  </entry>
  
  <entry>
    <title>最小生成树</title>
    <link href="http://example.com/2021/05/22/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    <id>http://example.com/2021/05/22/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</id>
    <published>2021-05-22T06:16:45.000Z</published>
    <updated>2022-06-27T09:53:45.481Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最小生成树">最小生成树</h1><hr /><h3 id="prim算法">Prim算法</h3><h4 id="朴素prim算法">朴素Prim算法</h4><h4 id="on2"><span class="math inline">\(O(n^2)\)</span></h4><ol type="1"><li>初始化dist[]数组为0x3f</li><li>枚举之后的每条边（枚举n次） 找到离集合最近的点t用t更新其他点到集合的距离 st[t] = true</li></ol><pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;cstring&gt;using namespace std;const int N &#x3D;  510, INF &#x3D; 0x3f3f3f3f; int n, m;int dist[N], g[N][N];bool st[N];int prim()&#123;    memset(dist, 0x3f, sizeof(dist));    dist[1] &#x3D; 0;    int res &#x3D; 0;    for(int i &#x3D; 0; i &lt; n; i ++ )  &#x2F;&#x2F;  与朴素版dijkstra一样更新n-1次    &#123;        int t &#x3D; -1;        for(int j &#x3D; 1; j &lt;&#x3D; n; j ++ )            if(!st[j] &amp;&amp; (t &#x3D;&#x3D; -1 || dist[j] &lt; dist[t]))                t &#x3D; j;        res +&#x3D; dist[t];  &#x2F;&#x2F; 在这里更新结果        st[t] &#x3D; true;        for(int j &#x3D; 1; j &lt;&#x3D; n; j ++ )            dist[j] &#x3D; min(dist[j], g[t][j]);  &#x2F;&#x2F; 注意这里的更新方式和dijkstra不一样    &#125;    return res;&#125;int main()&#123;    cin &gt;&gt; n &gt;&gt; m;    memset(g, 0x3f, sizeof(g));    while(m -- )    &#123;        int a, b, c;        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;        g[a][b] &#x3D; g[b][a] &#x3D; min(g[a][b], c);  &#x2F;&#x2F;  存储无向边    &#125;    int t &#x3D; prim();    if(t &gt; INF &#x2F; 2)  printf(&quot;impossible\n&quot;);   &#x2F;&#x2F;  为了保险可以写成t &gt; INF &#x2F; 2    else printf(&quot;%d\n&quot;, t);    return 0;&#125;</code></pre><p>堆优化版(不常用)</p><h3 id="kruskal算法">Kruskal算法</h3><p><span class="math inline">\(O(m\cdot logm)\)</span></p><p>开一个结构体来存储所有的边</p><ol type="1"><li><p>将所有边按边权进行排序 <span class="math inline">\(O(m\cdotlogm)\)</span></p></li><li><p>枚举每条边a，及其权重c <spanclass="math inline">\(O(m)\)</span></p><p>if(a,b不连通)--并查集</p><p>将这条边加入集合中</p></li></ol><pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;using namespace std;const int N &#x3D; 1e5 + 10, M &#x3D; 1e5 + 10, INF &#x3D; 0x3f3f3f3f;int n, m;int p[N];  &#x2F;&#x2F; 并查集中用到的祖宗节点数组struct Edge&#123;    int a, b, w;    bool operator&lt; (const Edge &amp; x) const&#123;   &#x2F;&#x2F; 重载了小于号方便排序 &#x2F;&#x2F;重载小于号是记得用const加这个结构体的名称        return w &lt; x.w;    &#125;&#125;edge[M];int find(int a)&#123;    if(p[a] !&#x3D; a)  return p[a] &#x3D; find(p[a]);    else return a;&#125;int kruskal()&#123;    sort(edge + 1, edge + 1 + m);    for(int i &#x3D; 1; i &lt;&#x3D; n; i ++ )  p[i] &#x3D; i;  &#x2F;&#x2F; 初始化并查集!!!!    static int res, cnt;    for(int i &#x3D; 1; i &lt;&#x3D; m; i ++ )    &#123;        int a &#x3D; edge[i].a, b &#x3D; edge[i].b, w &#x3D; edge[i].w;        if(find(a) !&#x3D; find(b))  &#x2F;&#x2F;  如果这两个点不在同一个集合那就把它们加入进来        &#123;            p[find(a)] &#x3D; find(b);            res +&#x3D; w;            cnt ++ ;            if(cnt &#x3D;&#x3D; n - 1) break;  &#x2F;&#x2F; 加了这个优化能稍微快一点         &#125;    &#125;    if(cnt &lt; n - 1)  return INF;    else return res;&#125;int main()&#123;    cin &gt;&gt; n &gt;&gt; m;    for(int i &#x3D; 1; i &lt;&#x3D; m; i ++ )    &#123;        cin &gt;&gt; edge[i].a &gt;&gt; edge[i].b &gt;&gt; edge[i].w;    &#125;    int x &#x3D; kruskal();    if(x &gt; INF &#x2F; 2)  printf(&quot;impossible\n&quot;);    else printf(&quot;%d&quot;, x);    return 0;&#125;</code></pre>]]></content>
    
    
    <summary type="html">acwing基础课图论笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="最小生成树" scheme="http://example.com/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
    <category term="图论" scheme="http://example.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>数论1</title>
    <link href="http://example.com/2021/05/21/%E6%95%B0%E8%AE%BA1/"/>
    <id>http://example.com/2021/05/21/%E6%95%B0%E8%AE%BA1/</id>
    <published>2021-05-21T09:16:45.000Z</published>
    <updated>2022-06-27T11:22:50.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数论1">数论1</h1><h3 id="质数">质数</h3><p>定义：针对大于一的整数，如果只包含1和他本身这两个约数，就被称为质数(素数)</p><h4 id="质数的判定试除法">质数的判定：试除法</h4><p><span class="math inline">\(O(\sqrt{n})\)</span></p><p>循环判断时写成<span class="math inline">\(i \le \frac ni\)</span>较好</p><h4 id="分解质因数试除法">分解质因数：试除法</h4><p><span class="math inline">\(O(\sqrt{n})\)</span></p><div class="sourceCode" id="cb1"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">1e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">;</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> num<span class="op">[</span>N<span class="op">];</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> t<span class="op">;</span></span><span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> t<span class="op">;</span></span><span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span> <span class="op">(</span>t<span class="op">--)</span></span><span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> n<span class="op">;</span></span><span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> n<span class="op">;</span></span><span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>        memset<span class="op">(</span>num<span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>num<span class="op">));</span></span><span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">2</span><span class="op">;</span> i <span class="op">&lt;=</span> n <span class="op">/</span> i<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>            <span class="co">//  每一个合数都可以用比它小的质数表示</span></span><span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>            <span class="dt">int</span> s <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>            <span class="cf">while</span><span class="op">(</span>n <span class="op">%</span> i <span class="op">==</span> <span class="dv">0</span><span class="op">)</span>   <span class="co">//  所以第一次找到的一定是一个质数</span></span><span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>                n <span class="op">/=</span> i<span class="op">;</span></span><span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>                s <span class="op">++</span> <span class="op">;</span></span><span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>s<span class="op">)</span> printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d</span><span class="st"> </span><span class="sc">%d\n</span><span class="st">&quot;</span><span class="op">,</span> i<span class="op">,</span> s<span class="op">);</span> <span class="co">// i一定是质数，s为其出现的次数</span></span><span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>n <span class="op">&gt;</span> <span class="dv">1</span><span class="op">)</span> printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d</span><span class="st"> 1</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">,</span> n<span class="op">);</span></span><span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 优化利用性质：n中最多只有一个大于sqrt(n)的质因子</span></span><span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 如果还有数那么一定只有这一个未被除过的，直接输出就好</span></span><span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>        printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="质数筛">质数筛</h4><p><span class="math inline">\(O(n\cdot log(logn))\)</span></p><p>埃式线性筛</p><div class="sourceCode" id="cb2"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">1e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">;</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> primes<span class="op">[</span>N<span class="op">];</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> cnt<span class="op">;</span></span><span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> st<span class="op">[</span>N<span class="op">];</span></span><span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> n<span class="op">;</span></span><span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n<span class="op">;</span></span><span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">2</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(!</span>st<span class="op">[</span>i<span class="op">])</span> primes<span class="op">[</span>cnt <span class="op">++</span> <span class="op">]</span> <span class="op">=</span> i<span class="op">;</span></span><span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>        </span><span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> j <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> primes<span class="op">[</span>j<span class="op">]</span> <span class="op">&lt;=</span> n <span class="op">/</span> i<span class="op">;</span> j <span class="op">++</span> <span class="op">)</span></span><span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>            st<span class="op">[</span>primes<span class="op">[</span>j<span class="op">]</span> <span class="op">*</span> i<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span>  <span class="co">//  标记该质数的倍数都是合数</span></span><span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>i <span class="op">%</span> primes<span class="op">[</span>j<span class="op">]</span> <span class="op">==</span> <span class="dv">0</span><span class="op">)</span> <span class="cf">break</span><span class="op">;</span>  <span class="co">// prime[j]一定是i的最小质因子</span></span><span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>    printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d</span><span class="st">&quot;</span><span class="op">,</span> cnt<span class="op">);</span></span><span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h3 id="约数">约数</h3><h4 id="求所有约数试除法">求所有约数:试除法</h4><div class="sourceCode" id="cb3"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#pragma GCC diagnostic error &quot;-std=c++11&quot; </span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cmath&gt;</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;vector&gt;</span></span><span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;map&gt;</span></span><span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;queue&gt;</span></span><span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;stack&gt;</span></span><span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;algorithm&gt;</span></span><span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="pp">#define debug</span><span class="op">(</span>x<span class="op">)</span><span class="pp"> </span>cout<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> #</span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span><span class="st">&quot; = &quot;</span><span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>endl<span class="op">;</span></span><span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">1e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">,</span> mod <span class="op">=</span> <span class="fl">1e9</span> <span class="op">+</span> <span class="dv">7</span><span class="op">;</span></span><span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">double</span> esp <span class="op">=</span> <span class="fl">1e-6</span><span class="op">;</span></span><span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> t<span class="op">;</span></span><span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> t<span class="op">;</span></span><span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a>    vector<span class="op">&lt;</span><span class="dt">int</span><span class="op">&gt;</span> res<span class="op">;</span></span><span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span> <span class="op">(</span>t<span class="op">--)</span> <span class="op">&#123;</span></span><span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> n<span class="op">;</span></span><span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> n<span class="op">;</span></span><span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a>        res<span class="op">.</span>clear<span class="op">();</span></span><span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> n <span class="op">/</span> i<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb3-31"><a href="#cb3-31" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>n <span class="op">%</span> i <span class="op">==</span> <span class="dv">0</span><span class="op">)</span></span><span id="cb3-32"><a href="#cb3-32" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb3-33"><a href="#cb3-33" aria-hidden="true" tabindex="-1"></a>                res<span class="op">.</span>push_back<span class="op">(</span>i<span class="op">);</span></span><span id="cb3-34"><a href="#cb3-34" aria-hidden="true" tabindex="-1"></a>                <span class="cf">if</span><span class="op">(</span>i <span class="op">!=</span> n <span class="op">/</span> i<span class="op">)</span>  res<span class="op">.</span>push_back<span class="op">(</span>n <span class="op">/</span> i<span class="op">);</span></span><span id="cb3-35"><a href="#cb3-35" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb3-36"><a href="#cb3-36" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb3-37"><a href="#cb3-37" aria-hidden="true" tabindex="-1"></a>        sort<span class="op">(</span>res<span class="op">.</span>begin<span class="op">(),</span> res<span class="op">.</span>end<span class="op">());</span> <span class="co">//  排序保证输出的是有序的</span></span><span id="cb3-38"><a href="#cb3-38" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="kw">auto</span> x<span class="op">:</span>res<span class="op">)</span></span><span id="cb3-39"><a href="#cb3-39" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb3-40"><a href="#cb3-40" aria-hidden="true" tabindex="-1"></a>            printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d</span><span class="st"> &quot;</span><span class="op">,</span> x<span class="op">);</span></span><span id="cb3-41"><a href="#cb3-41" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb3-42"><a href="#cb3-42" aria-hidden="true" tabindex="-1"></a>        printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb3-43"><a href="#cb3-43" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb3-44"><a href="#cb3-44" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb3-45"><a href="#cb3-45" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="约数个数">约数个数</h4><p>如果 <span class="math inline">\(N=p_{1}^{\alpha_{1}}\cdotp_{2}^{\alpha_{2}} \cdots p_{k}^{\alpha_{k}}\)</span> p为质数</p><p>则约数个数为 <span class="math inline">\((\alpha_{1} + 1)(\alpha_{2}+ 1)\cdots(\alpha_{k} + 1)\)</span> 本质上是利用了乘法原理</p><p>其中所有约数对应了任一个质数可以选择 <spanclass="math inline">\(0\thicksim \alpha\)</span> 次的幂的情况</p><p>int范围内约数个数最多的大约有1500个</p><div class="sourceCode" id="cb4"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#pragma GCC diagnostic error &quot;-std=c++11&quot;</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;bits/stdc++.h&gt;</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="pp">#define debug</span><span class="op">(</span>x<span class="op">)</span><span class="pp"> </span>cout<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> #</span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span><span class="st">&quot; = &quot;</span><span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>endl</span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">1e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">,</span> mod <span class="op">=</span> <span class="fl">1e9</span> <span class="op">+</span> <span class="dv">7</span><span class="op">;</span></span><span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="co">//const double esp = 1e-6;</span></span><span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> t<span class="op">;</span></span><span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> t<span class="op">;</span></span><span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>    map<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> primes<span class="op">;</span></span><span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span> <span class="op">(</span>t<span class="op">--)</span> <span class="op">&#123;</span></span><span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> n<span class="op">;</span></span><span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> n<span class="op">;</span></span><span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">2</span><span class="op">;</span> i <span class="op">&lt;=</span> n <span class="op">/</span> i<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb4-24"><a href="#cb4-24" aria-hidden="true" tabindex="-1"></a>            <span class="cf">while</span> <span class="op">(</span>n <span class="op">%</span> i <span class="op">==</span> <span class="dv">0</span><span class="op">)</span> </span><span id="cb4-25"><a href="#cb4-25" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb4-26"><a href="#cb4-26" aria-hidden="true" tabindex="-1"></a>                n <span class="op">/=</span> i<span class="op">;</span></span><span id="cb4-27"><a href="#cb4-27" aria-hidden="true" tabindex="-1"></a>                primes<span class="op">[</span>i<span class="op">]</span> <span class="op">++</span> <span class="op">;</span></span><span id="cb4-28"><a href="#cb4-28" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb4-29"><a href="#cb4-29" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb4-30"><a href="#cb4-30" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>n <span class="op">&gt;</span> <span class="dv">1</span><span class="op">)</span> primes<span class="op">[</span>n<span class="op">]</span> <span class="op">++</span> <span class="op">;</span></span><span id="cb4-31"><a href="#cb4-31" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb4-32"><a href="#cb4-32" aria-hidden="true" tabindex="-1"></a>    LL res <span class="op">=</span> <span class="dv">1</span><span class="op">;</span></span><span id="cb4-33"><a href="#cb4-33" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="kw">auto</span> prime <span class="op">:</span> primes<span class="op">)</span>  res <span class="op">=</span> res <span class="op">*</span> <span class="op">(</span>prime<span class="op">.</span>second <span class="op">+</span> <span class="dv">1</span><span class="op">)</span> <span class="op">%</span> mod<span class="op">;</span></span><span id="cb4-34"><a href="#cb4-34" aria-hidden="true" tabindex="-1"></a>    printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%lld\n</span><span class="st">&quot;</span><span class="op">,</span> res<span class="op">);</span></span><span id="cb4-35"><a href="#cb4-35" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb4-36"><a href="#cb4-36" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="约数之和">约数之和</h4><p>如果 <span class="math inline">\(N=p_{1}^{\alpha_{1}}\cdotp_{2}^{\alpha_{2}} \cdots p_{k}^{\alpha_{k}}\)</span></p><p>则约数个数为:</p><p><span class="math display">\[(p_{1}^{0} + p_{1}^{1} + \cdots +p_{1}^{\alpha_{1}})\cdot (p_{2}^{0} + p_{2}^{1} + \cdots +p_{2}^{\alpha_{2}})\cdot\cdots \cdot (p_{k}^{0} + p_{k}^{1} + \cdots +p_{k}^{\alpha_{k}})\]</span></p><div class="sourceCode" id="cb5"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#pragma GCC diagnostic error &quot;-std=c++11&quot;</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;bits/stdc++.h&gt;</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#define debug</span><span class="op">(</span>x<span class="op">)</span><span class="pp"> </span>cout<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> #</span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span><span class="st">&quot; = &quot;</span><span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>endl</span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">1e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">,</span> mod <span class="op">=</span> <span class="fl">1e9</span> <span class="op">+</span> <span class="dv">7</span><span class="op">;</span></span><span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a><span class="co">//const double esp = 1e-6;</span></span><span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>map<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> primes<span class="op">;</span></span><span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> t<span class="op">;</span></span><span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> t<span class="op">;</span></span><span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span> <span class="op">(</span>t <span class="op">--</span> <span class="op">)</span></span><span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> n<span class="op">;</span></span><span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> n<span class="op">;</span></span><span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">2</span><span class="op">;</span> i <span class="op">&lt;=</span> n <span class="op">/</span> i<span class="op">;</span> i <span class="op">++)</span></span><span id="cb5-22"><a href="#cb5-22" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb5-23"><a href="#cb5-23" aria-hidden="true" tabindex="-1"></a>            <span class="cf">while</span> <span class="op">(</span>n <span class="op">%</span> i <span class="op">==</span> <span class="dv">0</span><span class="op">)</span></span><span id="cb5-24"><a href="#cb5-24" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb5-25"><a href="#cb5-25" aria-hidden="true" tabindex="-1"></a>                primes<span class="op">[</span>i<span class="op">]</span> <span class="op">++</span> <span class="op">;</span></span><span id="cb5-26"><a href="#cb5-26" aria-hidden="true" tabindex="-1"></a>                n <span class="op">/=</span> i<span class="op">;</span></span><span id="cb5-27"><a href="#cb5-27" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb5-28"><a href="#cb5-28" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb5-29"><a href="#cb5-29" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>n <span class="op">&gt;</span> <span class="dv">1</span><span class="op">)</span>  primes<span class="op">[</span>n<span class="op">]</span> <span class="op">++</span> <span class="op">;</span></span><span id="cb5-30"><a href="#cb5-30" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb5-31"><a href="#cb5-31" aria-hidden="true" tabindex="-1"></a>    LL res <span class="op">=</span> <span class="dv">1</span><span class="op">;</span></span><span id="cb5-32"><a href="#cb5-32" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="kw">auto</span> p <span class="op">:</span> primes<span class="op">)</span>  <span class="co">// 按照求和的公式进行计算</span></span><span id="cb5-33"><a href="#cb5-33" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb5-34"><a href="#cb5-34" aria-hidden="true" tabindex="-1"></a>        LL a <span class="op">=</span> p<span class="op">.</span>first<span class="op">,</span> b <span class="op">=</span> p<span class="op">.</span>second<span class="op">;</span></span><span id="cb5-35"><a href="#cb5-35" aria-hidden="true" tabindex="-1"></a>        <span class="co">//  a是底数，b是指数</span></span><span id="cb5-36"><a href="#cb5-36" aria-hidden="true" tabindex="-1"></a>        LL t <span class="op">=</span> <span class="dv">1</span><span class="op">;</span></span><span id="cb5-37"><a href="#cb5-37" aria-hidden="true" tabindex="-1"></a>        <span class="cf">while</span> <span class="op">(</span>b <span class="op">--</span> <span class="op">)</span> t <span class="op">=</span> <span class="op">(</span>t <span class="op">*</span> a <span class="op">+</span> <span class="dv">1</span><span class="op">)</span> <span class="op">%</span> mod<span class="op">;</span></span><span id="cb5-38"><a href="#cb5-38" aria-hidden="true" tabindex="-1"></a>        <span class="co">//  利用秦九韶算法, 每次乘以加一---复杂度O(n)</span></span><span id="cb5-39"><a href="#cb5-39" aria-hidden="true" tabindex="-1"></a>        res <span class="op">=</span> res <span class="op">*</span> t <span class="op">%</span> mod<span class="op">;</span></span><span id="cb5-40"><a href="#cb5-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb5-41"><a href="#cb5-41" aria-hidden="true" tabindex="-1"></a>    cout <span class="op">&lt;&lt;</span> res <span class="op">&lt;&lt;</span> endl<span class="op">;</span></span><span id="cb5-42"><a href="#cb5-42" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb5-43"><a href="#cb5-43" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="最大公约数">最大公约数</h4><p>欧几里得算法(辗转相除法)</p><p>时间复杂度：<span class="math inline">\(O(logn)\)</span></p><p>核心原理：<span class="math inline">\(gcd(a, b)=gcd(b,a \%b)\)</span></p><div class="sourceCode" id="cb6"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> gcd<span class="op">(</span><span class="dt">int</span> a<span class="op">,</span> <span class="dt">int</span> b<span class="op">)</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> b <span class="op">?</span> gcd<span class="op">(</span>b<span class="op">,</span> a <span class="op">%</span> b<span class="op">)</span> <span class="op">:</span> a<span class="op">;</span></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h3 id="欧拉函数">欧拉函数</h3><p><span class="math inline">\(\varphi(n)\)</span>指<spanclass="math inline">\(1\sim n\)</span>中与<spanclass="math inline">\(n\)</span>互质的数的个数</p><p>当 <span class="math inline">\(N=p_{1}^{\alpha_{1}}\cdotp_{2}^{\alpha_{2}} \cdots p_{k}^{\alpha_{k}}\)</span></p><p>则有</p><p><span class="math display">\[\begin{align}\varphi(n) &amp; = N\cdot(1 - \frac{1}{p_{1}})\cdot (1 -\frac{1}{p_{2}}) \cdots (1 - \frac{1}{p_{k}}) \\&amp; = N\cdot(\frac{p_{1} - 1}{p_{1}})\cdot (\frac{p_{2} - 1}{p_{2}})\cdots (\frac{p_{k} - 1}{p_{k}})\end{align}\]</span></p><p>可利用容斥原理进行证明</p><p>时间复杂度：<span class="math inline">\(O(\sqrt {n})\)</span>由分解质因数决定</p><h4 id="分解法">分解法</h4><div class="sourceCode" id="cb7"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#pragma GCC diagnostic error &quot;-std=c++11&quot;</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;bits/stdc++.h&gt;</span></span><span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#define debug</span><span class="op">(</span>x<span class="op">)</span><span class="pp"> </span>cout<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> #</span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span><span class="st">&quot; = &quot;</span><span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>endl</span><span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a><span class="co">//const int N = 1e6 + 5, mod = 1e9 + 7;</span></span><span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a><span class="co">//const double esp = 1e-6;</span></span><span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> Eular<span class="op">(</span><span class="dt">int</span> a<span class="op">)&#123;</span></span><span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> res <span class="op">=</span> a<span class="op">;</span></span><span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">2</span><span class="op">;</span>  i <span class="op">&lt;=</span> a <span class="op">/</span> i<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>a <span class="op">%</span> i <span class="op">==</span> <span class="dv">0</span><span class="op">)</span></span><span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a>            res <span class="op">=</span> res <span class="op">/</span> i <span class="op">*</span> <span class="op">(</span>i <span class="op">-</span> <span class="dv">1</span><span class="op">);</span></span><span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a>            <span class="cf">while</span> <span class="op">(</span>a <span class="op">%</span> i <span class="op">==</span> <span class="dv">0</span><span class="op">)</span> a <span class="op">/=</span> i<span class="op">;</span> </span><span id="cb7-21"><a href="#cb7-21" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb7-22"><a href="#cb7-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb7-23"><a href="#cb7-23" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>a <span class="op">&gt;</span> <span class="dv">1</span><span class="op">)</span>  res <span class="op">=</span> res <span class="op">/</span> a <span class="op">*</span> <span class="op">(</span>a <span class="op">-</span> <span class="dv">1</span><span class="op">);</span></span><span id="cb7-24"><a href="#cb7-24" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> res<span class="op">;</span></span><span id="cb7-25"><a href="#cb7-25" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb7-26"><a href="#cb7-26" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-27"><a href="#cb7-27" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb7-28"><a href="#cb7-28" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb7-29"><a href="#cb7-29" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> t<span class="op">;</span></span><span id="cb7-30"><a href="#cb7-30" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> t<span class="op">;</span></span><span id="cb7-31"><a href="#cb7-31" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span> <span class="op">(</span>t <span class="op">--</span> <span class="op">)</span></span><span id="cb7-32"><a href="#cb7-32" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb7-33"><a href="#cb7-33" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">;</span></span><span id="cb7-34"><a href="#cb7-34" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a<span class="op">;</span></span><span id="cb7-35"><a href="#cb7-35" aria-hidden="true" tabindex="-1"></a>        printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d\n</span><span class="st">&quot;</span><span class="op">,</span> Eular<span class="op">(</span>a<span class="op">));</span></span><span id="cb7-36"><a href="#cb7-36" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb7-37"><a href="#cb7-37" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb7-38"><a href="#cb7-38" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="线性筛法">线性筛法</h4><div class="sourceCode" id="cb8"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#pragma GCC diagnostic error &quot;-std=c++11&quot;</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;algorithm&gt;</span></span><span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;vector&gt;</span></span><span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">1e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">,</span> mod <span class="op">=</span> <span class="fl">1e9</span> <span class="op">+</span> <span class="dv">7</span><span class="op">;</span></span><span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> primes<span class="op">[</span>N<span class="op">],</span> cnt<span class="op">;</span></span><span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> phi<span class="op">[</span>N<span class="op">];</span></span><span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> st<span class="op">[</span>N<span class="op">];</span></span><span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> get_eulers<span class="op">(</span><span class="dt">int</span> n<span class="op">)</span></span><span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a>    phi<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">1</span><span class="op">;</span></span><span id="cb8-21"><a href="#cb8-21" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">2</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb8-22"><a href="#cb8-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb8-23"><a href="#cb8-23" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(!</span>st<span class="op">[</span>i<span class="op">])</span></span><span id="cb8-24"><a href="#cb8-24" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb8-25"><a href="#cb8-25" aria-hidden="true" tabindex="-1"></a>            primes<span class="op">[</span>cnt <span class="op">++</span> <span class="op">]</span> <span class="op">=</span> i<span class="op">;</span></span><span id="cb8-26"><a href="#cb8-26" aria-hidden="true" tabindex="-1"></a>            phi<span class="op">[</span>i<span class="op">]</span> <span class="op">=</span> i <span class="op">-</span> <span class="dv">1</span><span class="op">;</span>  <span class="co">//  i是质数</span></span><span id="cb8-27"><a href="#cb8-27" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb8-28"><a href="#cb8-28" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> j <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> primes<span class="op">[</span>j<span class="op">]</span> <span class="op">&lt;=</span> n <span class="op">/</span> i<span class="op">;</span> j <span class="op">++</span> <span class="op">)</span></span><span id="cb8-29"><a href="#cb8-29" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb8-30"><a href="#cb8-30" aria-hidden="true" tabindex="-1"></a>            st<span class="op">[</span>primes<span class="op">[</span>j<span class="op">]</span> <span class="op">*</span> i<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb8-31"><a href="#cb8-31" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>i <span class="op">%</span> primes<span class="op">[</span>j<span class="op">]</span> <span class="op">==</span> <span class="dv">0</span><span class="op">)</span></span><span id="cb8-32"><a href="#cb8-32" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb8-33"><a href="#cb8-33" aria-hidden="true" tabindex="-1"></a>                phi<span class="op">[</span>primes<span class="op">[</span>j<span class="op">]</span> <span class="op">*</span> i<span class="op">]</span> <span class="op">=</span> phi<span class="op">[</span>i<span class="op">]</span> <span class="op">*</span> primes<span class="op">[</span>j<span class="op">];</span></span><span id="cb8-34"><a href="#cb8-34" aria-hidden="true" tabindex="-1"></a>                <span class="cf">break</span><span class="op">;</span></span><span id="cb8-35"><a href="#cb8-35" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb8-36"><a href="#cb8-36" aria-hidden="true" tabindex="-1"></a>            phi<span class="op">[</span>primes<span class="op">[</span>j<span class="op">]</span> <span class="op">*</span> i<span class="op">]</span> <span class="op">=</span> phi<span class="op">[</span>i<span class="op">]</span> <span class="op">*</span> <span class="op">(</span>primes<span class="op">[</span>j<span class="op">]</span> <span class="op">-</span> <span class="dv">1</span><span class="op">);</span></span><span id="cb8-37"><a href="#cb8-37" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb8-38"><a href="#cb8-38" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb8-39"><a href="#cb8-39" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb8-40"><a href="#cb8-40" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-41"><a href="#cb8-41" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb8-42"><a href="#cb8-42" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb8-43"><a href="#cb8-43" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> n<span class="op">;</span></span><span id="cb8-44"><a href="#cb8-44" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n<span class="op">;</span></span><span id="cb8-45"><a href="#cb8-45" aria-hidden="true" tabindex="-1"></a>    get_eulers<span class="op">(</span>n<span class="op">);</span></span><span id="cb8-46"><a href="#cb8-46" aria-hidden="true" tabindex="-1"></a>    LL res <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb8-47"><a href="#cb8-47" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb8-48"><a href="#cb8-48" aria-hidden="true" tabindex="-1"></a>        res <span class="op">+=</span> phi<span class="op">[</span>i<span class="op">];</span></span><span id="cb8-49"><a href="#cb8-49" aria-hidden="true" tabindex="-1"></a>    cout <span class="op">&lt;&lt;</span> res <span class="op">&lt;&lt;</span> endl<span class="op">;</span></span><span id="cb8-50"><a href="#cb8-50" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb8-51"><a href="#cb8-51" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h3 id="快速幂">快速幂</h3><h4 id="模板">模板</h4><p>求<span class="math inline">\(a^{k}\%p\)</span></p><p>优化原理：将指数用二进制预处理</p><p>复杂度<span class="math inline">\(O(logn)\)</span></p><div class="sourceCode" id="cb9"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a>LL q_pow<span class="op">(</span>LL a<span class="op">,</span> LL k<span class="op">,</span> LL mod<span class="op">)</span></span><span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>    LL res <span class="op">=</span> <span class="dv">1</span><span class="op">;</span></span><span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span> <span class="op">(</span>k<span class="op">)</span></span><span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>k<span class="op">&amp;</span><span class="dv">1</span><span class="op">)</span>  res <span class="op">=</span> res <span class="op">*</span> a <span class="op">%</span> mod<span class="op">;</span></span><span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>        a <span class="op">=</span> a <span class="op">*</span> a <span class="op">%</span> mod<span class="op">;</span></span><span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>        k <span class="op">&gt;&gt;=</span> <span class="dv">1</span><span class="op">;</span></span><span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> res<span class="op">;</span></span><span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="快速幂求乘法逆元">快速幂求乘法逆元</h4><p>乘法逆元的定义</p><blockquote><p>若整数 <span class="math inline">\(b\)</span>，<spanclass="math inline">\(m\)</span>互质，并且对于任意的整数 <spanclass="math inline">\(a\)</span>，如果满足 <spanclass="math inline">\(b|a\)</span>，则存在一个整数 <spanclass="math inline">\(x\)</span>，使得<spanclass="math inline">\(a/b≡a×x(modm)\)</span>，则称 <spanclass="math inline">\(x\)</span> 为 <spanclass="math inline">\(b\)</span> 的模 <spanclass="math inline">\(m\)</span> 乘法逆元，记为 <spanclass="math inline">\(b^{−1}(modm)\)</span> <spanclass="math inline">\(b\)</span> 存在乘法逆元的充要条件是 <spanclass="math inline">\(b\)</span> 与模数 <spanclass="math inline">\(m\)</span> 互质。当模数 <spanclass="math inline">\(m\)</span> 为质数时，<spanclass="math inline">\(b^{m−2}\)</span> 即为 <spanclass="math inline">\(b\)</span> 的乘法逆元</p></blockquote><p>那么等价于求<span class="math inline">\(b^{m−2}\)</span></p><p>用快速幂<code>q_pow(b, m - 2, m)</code>即可</p><p>注意：当 <span class="math inline">\(b\%p==0\)</span> 时无解</p><h3 id="扩展欧几里得算法">扩展欧几里得算法</h3><h4 id="裴蜀定理">裴蜀定理</h4><blockquote><p>对于任意正整数<spanclass="math inline">\(a,b\)</span>，一定存在非零整数<spanclass="math inline">\(x,y\)</span>，使得 <spanclass="math inline">\(ax+by=gcd(a,b)\)</span></p></blockquote><p>请求出一组 <span class="math inline">\(x, y\)</span> 满足 <spanclass="math inline">\(ax + by = gcd(a, b)\)</span></p><div class="sourceCode" id="cb10"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> exgcd<span class="op">(</span><span class="dt">int</span> a<span class="op">,</span> <span class="dt">int</span> b<span class="op">,</span> <span class="dt">int</span> <span class="op">&amp;</span>x<span class="op">,</span> <span class="dt">int</span> <span class="op">&amp;</span>y<span class="op">)</span></span><span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(!</span>b<span class="op">)</span></span><span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>        x <span class="op">=</span> <span class="dv">1</span><span class="op">,</span> y <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> a<span class="op">;</span></span><span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> d <span class="op">=</span> exgcd<span class="op">(</span>b<span class="op">,</span> a <span class="op">%</span> b<span class="op">,</span> y<span class="op">,</span> x<span class="op">);</span></span><span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a>    y <span class="op">-=</span> a <span class="op">/</span> b <span class="op">*</span> x<span class="op">;</span></span><span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> d<span class="op">;</span></span><span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="解线性同余方程组">解线性同余方程组</h4><p><span class="math inline">\(a_i×x_i≡b_i(mod\ m_i)\)</span></p><p>求出一个满足上式的<span class="math inline">\(x_i\)</span></p><p>上式等价于<span class="math inline">\(a∗x+m∗y=b\)</span></p><div class="sourceCode" id="cb11"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#pragma GCC diagnostic error &quot;-std=c++11&quot;</span></span><span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;bits/stdc++.h&gt;</span></span><span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#define debug</span><span class="op">(</span>x<span class="op">)</span><span class="pp"> </span>cout<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> #</span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span><span class="st">&quot; = &quot;</span><span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>endl</span><span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb11-6"><a href="#cb11-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb11-7"><a href="#cb11-7" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb11-8"><a href="#cb11-8" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb11-9"><a href="#cb11-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb11-10"><a href="#cb11-10" aria-hidden="true" tabindex="-1"></a><span class="co">//const int N = 1e6 + 5, mod = 1e9 + 7;</span></span><span id="cb11-11"><a href="#cb11-11" aria-hidden="true" tabindex="-1"></a><span class="co">//const double esp = 1e-6;</span></span><span id="cb11-12"><a href="#cb11-12" aria-hidden="true" tabindex="-1"></a></span><span id="cb11-13"><a href="#cb11-13" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> exgcd<span class="op">(</span><span class="dt">int</span> a<span class="op">,</span> <span class="dt">int</span> b<span class="op">,</span> <span class="dt">int</span> <span class="op">&amp;</span>x<span class="op">,</span> <span class="dt">int</span> <span class="op">&amp;</span>y<span class="op">)</span></span><span id="cb11-14"><a href="#cb11-14" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb11-15"><a href="#cb11-15" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span><span class="op">(!</span>b<span class="op">)</span></span><span id="cb11-16"><a href="#cb11-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb11-17"><a href="#cb11-17" aria-hidden="true" tabindex="-1"></a>        x <span class="op">=</span> <span class="dv">1</span><span class="op">,</span> y <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb11-18"><a href="#cb11-18" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> a<span class="op">;</span></span><span id="cb11-19"><a href="#cb11-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span>    </span><span id="cb11-20"><a href="#cb11-20" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> d <span class="op">=</span> exgcd<span class="op">(</span>b<span class="op">,</span> a <span class="op">%</span> b<span class="op">,</span> y<span class="op">,</span> x<span class="op">);</span></span><span id="cb11-21"><a href="#cb11-21" aria-hidden="true" tabindex="-1"></a>    y <span class="op">-=</span> a <span class="op">/</span> b <span class="op">*</span> x<span class="op">;</span></span><span id="cb11-22"><a href="#cb11-22" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> d<span class="op">;</span></span><span id="cb11-23"><a href="#cb11-23" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb11-24"><a href="#cb11-24" aria-hidden="true" tabindex="-1"></a></span><span id="cb11-25"><a href="#cb11-25" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb11-26"><a href="#cb11-26" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb11-27"><a href="#cb11-27" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> t<span class="op">;</span></span><span id="cb11-28"><a href="#cb11-28" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> t<span class="op">;</span></span><span id="cb11-29"><a href="#cb11-29" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span> <span class="op">(</span>t<span class="op">--)</span></span><span id="cb11-30"><a href="#cb11-30" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb11-31"><a href="#cb11-31" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">,</span> b<span class="op">,</span> m<span class="op">,</span> x<span class="op">,</span> y<span class="op">;</span></span><span id="cb11-32"><a href="#cb11-32" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b <span class="op">&gt;&gt;</span> m<span class="op">;</span></span><span id="cb11-33"><a href="#cb11-33" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> d <span class="op">=</span> exgcd<span class="op">(</span>a<span class="op">,</span> m<span class="op">,</span> x<span class="op">,</span> y<span class="op">);</span></span><span id="cb11-34"><a href="#cb11-34" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>b <span class="op">%</span> d<span class="op">)</span> printf<span class="op">(</span><span class="st">&quot;impossible</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb11-35"><a href="#cb11-35" aria-hidden="true" tabindex="-1"></a>        <span class="cf">else</span></span><span id="cb11-36"><a href="#cb11-36" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb11-37"><a href="#cb11-37" aria-hidden="true" tabindex="-1"></a>            x <span class="op">=</span> <span class="op">(</span>LL<span class="op">)</span>x <span class="op">*</span> b <span class="op">/</span> d <span class="op">%</span> m<span class="op">;</span></span><span id="cb11-38"><a href="#cb11-38" aria-hidden="true" tabindex="-1"></a>            cout <span class="op">&lt;&lt;</span> x <span class="op">&lt;&lt;</span> endl<span class="op">;</span></span><span id="cb11-39"><a href="#cb11-39" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb11-40"><a href="#cb11-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb11-41"><a href="#cb11-41" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb11-42"><a href="#cb11-42" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="求逆元">求逆元</h4><p>逆元<span class="math inline">\(x\)</span>为满足<spanclass="math inline">\(a*x≡1(mod\ p)\)</span></p><p>等价于$a * x + k * p = 1 $</p><div class="sourceCode" id="cb12"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#pragma GCC diagnostic error &quot;-std=c++11&quot;</span></span><span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;bits/stdc++.h&gt;</span></span><span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#define debug</span><span class="op">(</span>x<span class="op">)</span><span class="pp"> </span>cout<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> #</span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span><span class="st">&quot; = &quot;</span><span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>endl</span><span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb12-6"><a href="#cb12-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb12-7"><a href="#cb12-7" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb12-8"><a href="#cb12-8" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb12-9"><a href="#cb12-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb12-10"><a href="#cb12-10" aria-hidden="true" tabindex="-1"></a><span class="co">//const int N = 1e6 + 5, mod = 1e9 + 7;</span></span><span id="cb12-11"><a href="#cb12-11" aria-hidden="true" tabindex="-1"></a><span class="co">//const double esp = 1e-6;</span></span><span id="cb12-12"><a href="#cb12-12" aria-hidden="true" tabindex="-1"></a></span><span id="cb12-13"><a href="#cb12-13" aria-hidden="true" tabindex="-1"></a>LL exgcd<span class="op">(</span>LL a<span class="op">,</span> LL b<span class="op">,</span> LL <span class="op">&amp;</span>x<span class="op">,</span> LL <span class="op">&amp;</span>y<span class="op">)</span></span><span id="cb12-14"><a href="#cb12-14" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb12-15"><a href="#cb12-15" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span><span class="op">(!</span>b<span class="op">)</span></span><span id="cb12-16"><a href="#cb12-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb12-17"><a href="#cb12-17" aria-hidden="true" tabindex="-1"></a>        x <span class="op">=</span> <span class="dv">1</span><span class="op">,</span> y <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb12-18"><a href="#cb12-18" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> a<span class="op">;</span></span><span id="cb12-19"><a href="#cb12-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span>    </span><span id="cb12-20"><a href="#cb12-20" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> d <span class="op">=</span> exgcd<span class="op">(</span>b<span class="op">,</span> a <span class="op">%</span> b<span class="op">,</span> y<span class="op">,</span> x<span class="op">);</span></span><span id="cb12-21"><a href="#cb12-21" aria-hidden="true" tabindex="-1"></a>    y <span class="op">-=</span> a <span class="op">/</span> b <span class="op">*</span> x<span class="op">;</span></span><span id="cb12-22"><a href="#cb12-22" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> d<span class="op">;</span></span><span id="cb12-23"><a href="#cb12-23" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb12-24"><a href="#cb12-24" aria-hidden="true" tabindex="-1"></a></span><span id="cb12-25"><a href="#cb12-25" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb12-26"><a href="#cb12-26" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb12-27"><a href="#cb12-27" aria-hidden="true" tabindex="-1"></a>    LL t<span class="op">;</span></span><span id="cb12-28"><a href="#cb12-28" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> t<span class="op">;</span></span><span id="cb12-29"><a href="#cb12-29" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span> <span class="op">(</span>t<span class="op">--)</span></span><span id="cb12-30"><a href="#cb12-30" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb12-31"><a href="#cb12-31" aria-hidden="true" tabindex="-1"></a>        LL a<span class="op">,</span> p<span class="op">,</span> x<span class="op">,</span> y<span class="op">;</span></span><span id="cb12-32"><a href="#cb12-32" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> p<span class="op">;</span></span><span id="cb12-33"><a href="#cb12-33" aria-hidden="true" tabindex="-1"></a>        LL d <span class="op">=</span> exgcd<span class="op">(</span>a<span class="op">,</span> p<span class="op">,</span> x<span class="op">,</span> y<span class="op">);</span></span><span id="cb12-34"><a href="#cb12-34" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>d <span class="op">!=</span> <span class="dv">1</span><span class="op">)</span> printf<span class="op">(</span><span class="st">&quot;impossible</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb12-35"><a href="#cb12-35" aria-hidden="true" tabindex="-1"></a>        <span class="cf">else</span></span><span id="cb12-36"><a href="#cb12-36" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb12-37"><a href="#cb12-37" aria-hidden="true" tabindex="-1"></a>            cout <span class="op">&lt;&lt;</span> <span class="op">(</span>x <span class="op">+</span> p<span class="op">)</span> <span class="op">%</span> p <span class="op">&lt;&lt;</span> endl<span class="op">;</span> <span class="co">// 防止出现负数</span></span><span id="cb12-38"><a href="#cb12-38" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb12-39"><a href="#cb12-39" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb12-40"><a href="#cb12-40" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb12-41"><a href="#cb12-41" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h3 id="线性求逆元">线性求逆元</h3><p>通过递推式来求</p><div class="sourceCode" id="cb13"><preclass="sourceCode c++"><code class="sourceCode cpp"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a></span><span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb13-4"><a href="#cb13-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb13-5"><a href="#cb13-5" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">3e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">;</span></span><span id="cb13-6"><a href="#cb13-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb13-7"><a href="#cb13-7" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb13-8"><a href="#cb13-8" aria-hidden="true" tabindex="-1"></a>LL inv<span class="op">[</span>N<span class="op">];</span></span><span id="cb13-9"><a href="#cb13-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb13-10"><a href="#cb13-10" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb13-11"><a href="#cb13-11" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb13-12"><a href="#cb13-12" aria-hidden="true" tabindex="-1"></a>    LL n<span class="op">,</span> mod<span class="op">;</span></span><span id="cb13-13"><a href="#cb13-13" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n <span class="op">&gt;&gt;</span> mod<span class="op">;</span></span><span id="cb13-14"><a href="#cb13-14" aria-hidden="true" tabindex="-1"></a>    inv<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">1</span><span class="op">;</span></span><span id="cb13-15"><a href="#cb13-15" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">2</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb13-16"><a href="#cb13-16" aria-hidden="true" tabindex="-1"></a>        inv<span class="op">[</span>i<span class="op">]</span> <span class="op">=</span> <span class="op">(</span>mod <span class="op">-</span> mod <span class="op">/</span> i<span class="op">)</span> <span class="op">*</span> inv<span class="op">[</span>mod <span class="op">%</span> i<span class="op">]</span> <span class="op">%</span> mod<span class="op">;</span></span><span id="cb13-17"><a href="#cb13-17" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb13-18"><a href="#cb13-18" aria-hidden="true" tabindex="-1"></a>        printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%ld\n</span><span class="st">&quot;</span><span class="op">,</span> inv<span class="op">[</span>i<span class="op">]);</span></span><span id="cb13-19"><a href="#cb13-19" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb13-20"><a href="#cb13-20" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">acwing基础课数论笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="数学" scheme="http://example.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>数论2</title>
    <link href="http://example.com/2021/05/21/%E6%95%B0%E8%AE%BA2/"/>
    <id>http://example.com/2021/05/21/%E6%95%B0%E8%AE%BA2/</id>
    <published>2021-05-21T09:16:45.000Z</published>
    <updated>2022-06-27T09:35:28.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数论2">数论2</h2><hr /><h3 id="中国剩余定理">中国剩余定理</h3><p><span class="math display">\[\left\{\begin{array}{l}x \equiv a_{1}\left(\bmod m_{1}\right) \\x \equiv a_{2}\left(\bmod m_{2}\right) \\\cdots \\x \equiv a_{n}\left(\bmod m_{n}\right)\end{array}\right.\]</span></p><p>则求 <span class="math inline">\(N=\prod_{i=1}^{n} m_{i}\)</span></p><p>得到这个数为</p><p><span class="math display">\[x \equiv \sum_{i=1}^{n} a_{i} \times \frac{N}{m_{i}}\times\left[\left(\frac{N}{m_{i}}\right)^{-1}\right]_{m_{i}} \quad(\bmodN)\]</span></p><p>c++解法</p><pre class="language-C++" data-language="C++"><code class="language-C++">#pragma GCC diagnostic error &quot;-std&#x3D;c++11&quot;#include &lt;bits&#x2F;stdc++.h&gt;#define debug(x) cout &lt;&lt; #x &lt;&lt; &quot; &#x3D; &quot; &lt;&lt; x &lt;&lt; endlusing namespace std;typedef pair&lt;int, int&gt; PII;typedef long long LL;const int N &#x3D; 1e6 + 5;&#x2F;&#x2F;const double eps &#x3D; 1e-6;&#x2F;&#x2F;int dx[] &#x3D; &#123;1, 0, -1, 0&#125;, dy[] &#x3D; &#123;0, -1, 0, 1&#125;;&#x2F;&#x2F; int dx[8] &#x3D; &#123;-1, -1, -1, 0, 1, 1, 1, 0&#125;;&#x2F;&#x2F; int dy[8] &#x3D; &#123;-1, 0, 1, 1, 1, 0, -1, -1&#125;;LL exgcd(LL a, LL b, LL &amp;x, LL &amp;y)&#123;    if (b &#x3D;&#x3D; 0)    &#123;        x &#x3D; 1, y &#x3D; 0;        return a;    &#125;    LL  d &#x3D; exgcd(b, a % b, y, x);    y -&#x3D; a &#x2F; b * x;    return d;&#125;LL inline mod(LL a, LL b)&#123;    return ((a % b) + b) % b;&#125;int main()&#123;    int n;    cin &gt;&gt; n;    LL a1, m1;    cin &gt;&gt; a1 &gt;&gt; m1;    for (int i &#x3D; 1; i &lt; n; i ++ )    &#123;        LL a2, m2, k1, k2;        cin &gt;&gt; a2 &gt;&gt; m2;        LL d &#x3D; exgcd(a1, -a2, k1, k2);        if((m2 - m1) % d)        &#123;            puts(&quot;-1&quot;);            return 0;        &#125;        k1 &#x3D; mod(k1 * (m2 - m1) &#x2F; d, abs(a2 &#x2F; d));        m1 &#x3D; k1 * a1 + m1;        a1 &#x3D; abs(a1 &#x2F; d * a2);    &#125;    cout &lt;&lt; m1;    return 0;&#125;</code></pre><p>python解法</p><pre class="language-python" data-language="python"><code class="language-python">def exgcd(a,b,x,y):    if not b:        x,y &#x3D; 1,0        return a,x,y    d,x,y &#x3D; exgcd(b, a % b, y, x)    temp &#x3D; y    y &#x3D; x - a &#x2F;&#x2F; b * y    x &#x3D; temp    return d,x,yif __name__ &#x3D;&#x3D; &quot;__main__&quot;:    n &#x3D; int(input())    a1,m1 &#x3D; map(int,input().split())    for i in range(n-1):        a2,m2 &#x3D; map(int,input().split())        k1,k2 &#x3D; 0,0        d,k1,k2 &#x3D; exgcd(a1,a2,k1,k2)        if (m2-m1) % d:            print(-1)            exit()        k1 *&#x3D; (m2-m1) &#x2F;&#x2F; d        t &#x3D; a2 &#x2F;&#x2F; d        k1 &#x3D; k1 % t        m1 &#x3D; a1 * k1 + m1        a1 &#x3D; abs(a1 &#x2F;&#x2F; d * a2)    print(m1 % a1)</code></pre><h3 id="求组合数">求组合数</h3><h4 id="求-cb_a递推">Ⅰ求 <spanclass="math inline">\(C^b_a\)</span>(递推)</h4><p>a, b范围是2000，询问<span class="math inline">\(10^5\)</span>次</p><p><span class="math inline">\(C^b_a = C^b_{a - 1} + C^{b - 1}_{a -1}\)</span></p><p>通过递推进行处理</p><pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;algorithm&gt;const int N &#x3D; 2010, mod &#x3D; 1e9 + 7;int c[N][N];void init()&#123;for(int i &#x3D; 0; i &lt; N; i ++ )&#123;for(int j &#x3D; 0; j &lt;&#x3D; i; j ++ )&#123;if(!j)  c[i][j] &#x3D; 1;else c[i][j] &#x3D; (c[i - 1][j] + c[i - 1][j - 1]) % mod;&#125;&#125;&#125;int main()&#123;    init();    int n;    scanf(&quot;%d&quot;, &amp;n);    while(n -- )    &#123;        int a, b;        scanf(&quot;%d%d&quot;, &amp;a, &amp;b);        printf(&quot;%d\n&quot;, c[a][b]);    &#125;    return 0;&#125;</code></pre><h4 id="求-cb_a-预处理逆元">Ⅱ求 <spanclass="math inline">\(C^b_a\)</span> (预处理逆元)</h4><p>a, b范围是 <span class="math inline">\(10^5\)</span>，询问<spanclass="math inline">\(10^4\)</span>次</p><p>预处理出来阶乘和阶乘的逆元，利用该公式进行计算即可</p><p><span class="math inline">\(C^b_a = \frac{a!}{b!(a - b)!}=a!*b!^{-1}*(a - b)!^{-1}\)</span></p><pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;using namespace std;const int N &#x3D; 1e5 + 10, mod &#x3D; 1e9 + 7;typedef long long LL;int fact[N], infact[N];  &#x2F;&#x2F;  预处理的阶乘及逆元int q_pow(int a, int k, int mod)&#123;    int res &#x3D; 1;    while(k)    &#123;        if(k&amp;1)  res &#x3D; (LL)res * a % mod;        a &#x3D; (LL)a * a % mod;        k &gt;&gt;&#x3D; 1;    &#125;    return res;&#125;int main()&#123;    int n;    cin &gt;&gt; n;    fact[0] &#x3D; infact[0] &#x3D; 1;    for(int i &#x3D; 1; i &lt;&#x3D; N; i ++ )    &#123;        fact[i] &#x3D; (LL) fact[i - 1] * i % mod;        infact[i] &#x3D; (LL)infact[i - 1] * q_pow(i, mod - 2, mod) % mod;    &#125;    while (n -- )    &#123;        int a, b;        cin &gt;&gt; a &gt;&gt; b;        cout &lt;&lt; (LL)fact[a] * infact[b] % mod * infact[a - b] % mod &lt;&lt; endl;    &#125;    return 0;&#125;</code></pre><h4 id="求-cb_a-lucas定理">Ⅲ 求 <spanclass="math inline">\(C^b_a\)</span> (Lucas定理)</h4><p>a, b范围是 <span class="math inline">\(10^{18}\)</span>，询问<spanclass="math inline">\(20\)</span>次</p><p>利用Lucas定理 <span class="math display">\[\left(\begin{array}{c}n \\m\end{array}\right) \bmod p=\left(\begin{array}{c}\lfloor n / p\rfloor \\\lfloor m / p\rfloor\end{array}\right) \cdot\left(\begin{array}{c}n \bmod p \\m \bmod p\end{array}\right) \bmod p\]</span> Lucas 定理用于求解大组合数取模的问题，其中模数必须为素数</p><p>其中<span class="math inline">\(C_{a}^{b}\)</span>的求法推导如下<span class="math display">\[\begin{aligned}C_{a}^{b} &amp;= \frac{a !}{(a-b) ! * b !}\\&amp;=\frac{a *(a-1) *(a-2) * \ldots *(a-b+1) *(a-b) * \ldots * 1}{(a-b)*(a-b-1) * \ldots * 1 * b !} \\&amp;=\frac{a *(a-1) *(a-2) * \ldots(a-b+1)}{b !}\end{aligned}\]</span></p><pre class="language-c++" data-language="c++"><code class="language-c++">#pragma GCC diagnostic error &quot;-std&#x3D;c++11&quot;#include &lt;bits&#x2F;stdc++.h&gt;#define debug(x) cout &lt;&lt; #x &lt;&lt; &quot; &#x3D; &quot; &lt;&lt; x &lt;&lt; endlusing namespace std;typedef pair&lt;int, int&gt; PII;typedef long long LL;const int N &#x3D; 1e6 + 5, mod &#x3D; 1e9 + 7;&#x2F;&#x2F;const double eps &#x3D; 1e-6;&#x2F;&#x2F;int dx[] &#x3D; &#123;1, 0, -1, 0&#125;, dy[] &#x3D; &#123;0, -1, 0, 1&#125;;&#x2F;&#x2F; int dx[8] &#x3D; &#123;-1, -1, -1, 0, 1, 1, 1, 0&#125;;&#x2F;&#x2F; int dy[8] &#x3D; &#123;-1, 0, 1, 1, 1, 0, -1, -1&#125;;int q_pow(int a, int k, int p)&#123;    int res &#x3D; 1;    while(k)    &#123;        if(k &amp; 1)  res &#x3D; (LL)res * a % p;        a &#x3D; (LL)a * a % p;        k &gt;&gt;&#x3D; 1;    &#125;    return res;&#125;int C(int a, int b, int p)&#123;    if(b &gt; a)  return 0;    int res &#x3D; 1;    for (int i &#x3D; 1, j &#x3D; a; i &lt;&#x3D; b; i ++ ,j -- )    &#123;        res &#x3D; (LL)res * j % p;        res &#x3D; (LL)res * q_pow(i, p - 2, p) % p;    &#125;    return res;&#125;int lucas(LL a, LL b, int p)&#123;    if (a &lt; p &amp;&amp; b &lt; p)  return C(a, b, p);    else return (LL)C(a % p, b % p, p) * lucas(a &#x2F; p, b &#x2F; p, p) % p;&#125;int main()&#123;    int n;    cin &gt;&gt; n;    while(n -- )    &#123;        LL a, b;         int p;        cin &gt;&gt; a &gt;&gt; b &gt;&gt; p;        cout &lt;&lt; lucas(a, b, p) &lt;&lt; endl;    &#125;    return 0;&#125;</code></pre><h4 id="求c_ab高精度">Ⅳ 求<spanclass="math inline">\(C_a^b\)</span>(高精度)</h4><p>a, b的范围是5000，求1次，但是要求计算出来所以要用高精度</p><p>c++版本</p><pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;using namespace std;const int N &#x3D; 5010;int primes[N], cnt;int sum[N];bool st[N];void get_primes(int n)&#123;    for (int i &#x3D; 2; i &lt;&#x3D; n; i ++ )    &#123;        if(!st[i])  primes[cnt ++ ] &#x3D; i;        for (int j &#x3D; 0; primes[j] &lt;&#x3D; n &#x2F; i; j ++ )        &#123;            st[primes[j] * i] &#x3D; true;            if(i % primes[j] &#x3D;&#x3D; 0) break;        &#125;    &#125;&#125;int get(int n, int p)&#123;    int res &#x3D; 0;    while (n)&#123;        res +&#x3D; n &#x2F; p;        n &#x2F;&#x3D; p;    &#125;    return res;&#125;vector&lt;int&gt; mul(vector&lt;int&gt; a, int b)&#123;    vector&lt;int&gt; c;    int t &#x3D; 0;    for (int i &#x3D; 0; i &lt; a.size(); i ++ )    &#123;        t +&#x3D; a[i] * b;        c.push_back(t % 10);        t &#x2F;&#x3D; 10;    &#125;    while(t)    &#123;        c.push_back(t % 10);        t &#x2F;&#x3D; 10;    &#125;    return c;&#125;int main()&#123;    int a, b;    cin &gt;&gt; a &gt;&gt; b;    get_primes(a);    for (int i &#x3D; 0; i &lt; cnt; i ++ )    &#123;        int p &#x3D; primes[i];        sum[i] &#x3D; get(a, p) - get(a - b, p) - get(b, p);    &#125;        vector&lt;int&gt; res;    res.push_back(1);    for (int i &#x3D; 0; i &lt; cnt; i ++ )        for (int j &#x3D; 0; j &lt; sum[i]; j ++ )            res &#x3D; mul(res, primes[i]);                for (int i &#x3D; res.size() - 1; i &gt;&#x3D; 0; i -- )        printf(&quot;%d&quot;, res[i]);            return 0;&#125;</code></pre><p>python版本</p><p>利用定义，但是跑起来比c++略慢</p><pre class="language-python" data-language="python"><code class="language-python">a, b &#x3D; map(int, input().split())up &#x3D; 1down &#x3D; 1for i in range(a - b + 1, a + 1):    up *&#x3D; ifor i in range(1, b + 1):    down *&#x3D; iprint(up &#x2F;&#x2F; down)</code></pre><h4 id="卡特兰数">卡特兰数</h4><p>求满足条件的01序列</p><p>给定n个1，n个0，求它们能排列成的所有序列中，能够满足任意前缀序列中0的个数都不少于1的个数的序列有多少个</p><p>下图中，表示从<span class="math inline">\((0,0)\)</span>走到<spanclass="math inline">\((n,n)\)</span>的路径，在绿线及以下表示合法，若触碰红线即不合法</p><p>结果： <span class="math display">\[ans = C^{n}_{2n} - C^{n - 1}_{2n} = \frac{C^n_{2n}}{n+1}\]</span> 求组合数和逆元即可，注意除以n+1时也要用逆元</p><figure><imgsrc="https://cdn.acwing.com/media/article/image/2020/02/22/6828_9476d97655-Catalan.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;using namespace std;typedef long long LL;const int mod &#x3D; 1e9 + 7;LL q_pow(LL a, LL k)&#123;    LL ret &#x3D; 1;    while(k)    &#123;        if(k&amp;1) ret &#x3D; ret * a % mod;        a &#x3D; a * a % mod;        k &gt;&gt;&#x3D; 1;    &#125;    return ret;&#125;int main()&#123;    int n;    cin &gt;&gt; n;    LL ans &#x3D; 1;    &#x2F;&#x2F; z    for(int i &#x3D; 2 * n; i &gt; n; i -- ) ans &#x3D; ans * i % mod;    for(int i &#x3D; n; i &gt; 0; i -- )  ans &#x3D; ans * q_pow(i, mod - 2) % mod;        ans &#x3D; ans * q_pow(n + 1, mod - 2) % mod;        cout &lt;&lt; ans &lt;&lt; endl;    return 0;&#125;</code></pre><h4 id="斯特林数">斯特林数</h4><h4 id="错排问题">错排问题</h4><p>n封信，n个信封，求完全放错的方案数?</p><p>记方案数为f[n],可以递推来求</p><p>f[1] = 0, f[2] = 1</p><p>f[i] = (i-1) * (f[i-1] + f[i-2])</p><p>推导逻辑：</p><p>假设第一封信a占据了b的位置，那么此时b放在哪个信封分两种情况，b放在a位置，或b不放在a位置；</p><ul><li><p>第一类：第一种情况是放在a位置，此时b放在a位置，剩下n-2封信进行错排，方案数是f(n-2)</p></li><li><p>第二类：第二种情况是b没有去a的位置，那么b可能出现在除α之外的任何位置，b有n-2个位置可以去，不能去a,b位置，其余所有元素都有n-2个位置可以去（a，b位置不能去），这种情况下相当于除a之外的其它元素的错排问题，即n-1个元素的错排问题，方案数是f(n-1)</p></li><li><p>加法法则：汇总上述分类计数原理，使用加法法则，计算结果是f(n-1)+f(n-2)</p></li><li><p>乘法法则：对于每一封信都如此，当有n-1封信已经错排时，已经完全错排了</p><p>即f[i] = (i-1) * (f[i - 1] + f[i - 2])</p></li></ul><pre class="language-c++" data-language="c++"><code class="language-c++">#pragma GCC diagnostic error &quot;-std&#x3D;c++11&quot;#include &lt;algorithm&gt;#include &lt;iostream&gt;#include &lt;cstring&gt;using namespace std;typedef long long LL;const int N &#x3D; 1e6 + 5, mod &#x3D; 1e9 + 7;LL f[N];int main()&#123;    int n;    cin &gt;&gt; n;    f[1] &#x3D; 0;    f[2] &#x3D; 1;    for (int i &#x3D; 3; i &lt;&#x3D; n; i ++ )        f[i] &#x3D; (i - 1) * (f[i - 1] + f[i - 2]);    cout &lt;&lt; f[n] &lt;&lt; endl;    return 0;&#125;</code></pre><h3 id="高斯消元">高斯消元</h3><h4 id="解线性方程组">解线性方程组</h4><p>高斯消元是一种可以可以将增广矩阵化成阶梯型矩阵的算法</p><p>适用于求解包含n个方程，n个未知数的多元线性方程组</p><p><span class="math display">\[\left\{\begin{array}{llll}a_{11} x_{1}+ &amp; a_{12} x_{2}+\ldots+ &amp; a_{1 n} x_{n}= &amp;b_{1} \\a_{21} x_{1}+ &amp; a_{22} x_{2}+\ldots+ &amp; a_{2 n} x_{n}= &amp;b_{2} \\\vdots &amp; \vdots &amp; \vdots &amp; \vdots \\a_{n 1} x_{1}+ &amp; a_{n 2} x_{2}+\ldots+ &amp; a_{n n} x_{n}= &amp;b_{n}\end{array}\right.\]</span></p><p>算法步骤：</p><ul><li>找到当前列绝对值最大的一行</li><li>将这一行移到最上面</li><li>乘以相应的系数将改行的第一个数变成1</li><li>相减相消让下面所有的行的当前列变成0</li></ul><p><span class="math display">\[\left(\begin{array}{ccccc}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1 n} &amp; b_{1} \\a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2 n} &amp; b_{2} \\\vdots &amp; \vdots &amp; \vdots &amp; \vdots &amp; \vdots \\a_{n 1} &amp; a_{n 2} &amp; \cdots &amp; a_{n n} &amp; b_{n}\end{array}\right) \rightarrow \left(\begin{array}{ccccc}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1 n} &amp; b_{1} \\&amp; a_{2 i} &amp; a_{2(i+1)} &amp; a_{2 n} &amp; b_{2} \\&amp; &amp; \ddots &amp; \vdots &amp; \vdots \\&amp; &amp; &amp; a_{n n} &amp; b_{n}\end{array}\right)\]</span></p><ul><li>最后再把阶梯型矩阵从下到上回代到第一层即可得到方程的解</li></ul><p>复杂度<span class="math inline">\(O(n^3)\)</span></p><pre class="language-c++" data-language="c++"><code class="language-c++">#pragma GCC diagnostic error &quot;-std&#x3D;c++11&quot;#include &lt;bits&#x2F;stdc++.h&gt;#define debug(x) cout &lt;&lt; #x &lt;&lt; &quot; &#x3D; &quot; &lt;&lt; x &lt;&lt; endlusing namespace std;typedef pair&lt;int, int&gt; PII;typedef long long LL;const int N &#x3D; 1e3 + 5, mod &#x3D; 1e9 + 7;const double eps &#x3D; 1e-6;  &#x2F;&#x2F; 用eps来判断是否为0&#x2F;&#x2F;int dx[] &#x3D; &#123;1, 0, -1, 0&#125;, dy[] &#x3D; &#123;0, -1, 0, 1&#125;;int n;double a[N][N];int  gauss()&#123;    int c, r;  &#x2F;&#x2F; c代表列col, r代表行row    for (c &#x3D; 0, r &#x3D; 0; c &lt; n; c++)    &#123;        int t &#x3D; r;          &#x2F;&#x2F;  第一步，找到绝对值最大的数所在的行号        for (int i &#x3D; r; i &lt; n; i ++ )            if (fabs(a[i][c]) &gt; fabs(a[t][c]))                t &#x3D; i;        if (fabs(a[t][c]) &lt; eps)  continue;        &#x2F;&#x2F; 如果绝对值最大的是0，那么这一行全是0        for (int i &#x3D; c; i &lt; n + 1; i ++ )              swap(a[t][i], a[r][i]);          &#x2F;&#x2F; 第二步，把当前这一行换到最上面        for (int i &#x3D; n; i &gt;&#x3D; c; i -- )              a[r][i] &#x2F;&#x3D; a[r][c];          &#x2F;&#x2F; 第三步，把当前这一行的第一个数变成1，方程两边同时除以第一个系数        &#x2F;&#x2F; 必须要从后往前，不然第一个数会直接变为1，然后不修改其他系数        for (int i &#x3D; r + 1; i &lt; n; i ++ )            if (fabs(a[i][c]) &gt; eps)  &#x2F;&#x2F; 非零                for (int j &#x3D; n; j &gt;&#x3D; c; j -- )                    a[i][j] -&#x3D; a[r][j] * a[i][c];                    &#x2F;&#x2F;  第四步，把第r+1行~n行的第c列元素都消除为0                    &#x2F;&#x2F;  用最上面一行和这行做差除去这一行       r ++ ;    &#125;    if (r &lt; n)    &#123;        for (int i &#x3D; r; i &lt; n; i ++ )            if(fabs(a[i][n]) &gt; eps)                return 2;  &#x2F;&#x2F; 无解        return 1;  &#x2F;&#x2F; 无数解    &#125;    for (int i &#x3D; n - 1; i &gt;&#x3D; 0; i -- )        for (int j &#x3D; i + 1; j &lt; n; j ++ )            a[i][n] -&#x3D; a[j][n] * a[i][j];    return 0;&#125;int main()&#123;    cin &gt;&gt; n;    for (int i &#x3D; 0; i &lt; n; i ++ )        for (int j &#x3D; 0; j &lt; n + 1; j ++ )            cin &gt;&gt; a[i][j];    int t &#x3D; gauss();    if (t &#x3D;&#x3D; 0)    &#123;        for (int i &#x3D; 0; i &lt; n; i ++ )        if(fabs(a[i][n]) &lt; eps) puts(&quot;0.00&quot;);        else printf(&quot;%.2lf\n&quot;, a[i][n]);    &#125;    else if (t &#x3D;&#x3D; 1)  puts(&quot;Infinite group solutions&quot;);    else puts(&quot;No solution&quot;);    return 0;&#125;</code></pre><h4 id="高斯消元解异或方程组">高斯消元解异或方程组</h4><p>异或=&gt;不进位加法</p><pre class="language-c++" data-language="c++"><code class="language-c++">#pragma GCC diagnostic error &quot;-std&#x3D;c++11&quot;#include &lt;algorithm&gt;#include &lt;iostream&gt;#include &lt;cstring&gt;using namespace std;typedef pair&lt;int, int&gt; PII;typedef long long LL;const int N &#x3D; 110, mod &#x3D; 1e9 + 7;int n;int a[N][N];int gauss()&#123;    int c, r;    for (c &#x3D; 0, r &#x3D; 0; c &lt; n; c ++ )    &#123;        int t &#x3D; r;        for (int i &#x3D; r; i &lt; n; i ++ )        &#123;            if(a[i][c])                t &#x3D; i;        &#125;        if (!a[t][c])  continue;        for (int i &#x3D; c; i &lt;&#x3D; n; i ++ )            swap(a[r][i], a[t][i]);        for (int i &#x3D; r + 1; i &lt; n; i ++ )            if(a[i][c])                for (int j &#x3D; n; j &gt;&#x3D; c; j -- )                    a[i][j] ^&#x3D; a[r][j];        r ++ ;    &#125;    if(r &lt; n)    &#123;        for (int i &#x3D; r; i &lt; n; i ++ )            if(a[i][n])                return 2;        return 1;    &#125;    for (int i &#x3D; n - 1; i &gt;&#x3D; 0; i -- )        for (int j &#x3D; i + 1; j &lt; n; j ++ )            a[i][n] ^&#x3D; a[i][j] * a[j][n];    return 0;&#125;int main()&#123;    cin &gt;&gt; n;    for (int i &#x3D; 0; i &lt; n; i ++ )    &#123;        for (int j &#x3D; 0; j &lt; n + 1; j ++ )        &#123;            cin &gt;&gt; a[i][j];        &#125;    &#125;    int t &#x3D; gauss();    if(t &#x3D;&#x3D; 0)    &#123;        for (int i &#x3D; 0; i &lt; n; i ++ )            cout &lt;&lt; a[i][n] &lt;&lt; endl;    &#125;    else if(t &#x3D;&#x3D; 1) puts(&quot;Multiple sets of solutions&quot;);    else puts(&quot;No solution&quot;);    return 0;&#125;</code></pre>]]></content>
    
    
    <summary type="html">acwing基础课数论笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="数学" scheme="http://example.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>最短路算法</title>
    <link href="http://example.com/2021/05/21/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    <id>http://example.com/2021/05/21/%E6%9C%80%E7%9F%AD%E8%B7%AF/</id>
    <published>2021-05-21T09:16:45.000Z</published>
    <updated>2022-06-27T11:13:26.467Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最短路">最短路</h1><p>声明：n个点，m条边 稠密图用邻接矩阵，稀疏图用邻接表</p><p><img src="https://s2.loli.net/2022/03/24/UQgtY4E9yblsL75.png" /></p><h3 id="dijkstra算法">dijkstra算法</h3><p>不适用于有负权边的情况，复杂度为 <spanclass="math inline">\(O(n^2)\)</span>/<spanclass="math inline">\(O(m\cdot logn)\)</span></p><p>有朴素版本和堆(prioirty queue)优化版本</p><h4 id="朴素版本">朴素版本</h4><div class="sourceCode" id="cb1"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dijkstra<span class="op">()</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>dist<span class="op">,</span> <span class="bn">0x3f</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>dist<span class="op">));</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    dist<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span>  <span class="co">// 因为第一个点已经计算过了，所以循环n-1次即可</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> t <span class="op">=</span> <span class="op">-</span><span class="dv">1</span><span class="op">;</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> j <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> j <span class="op">&lt;=</span> n<span class="op">;</span> j <span class="op">++</span> <span class="op">)</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(!</span>st<span class="op">[</span>j<span class="op">]</span> <span class="op">&amp;&amp;</span> <span class="op">(</span>t <span class="op">==</span> <span class="op">-</span><span class="dv">1</span> <span class="op">||</span> dist<span class="op">[</span>j<span class="op">]</span> <span class="op">&lt;</span> dist<span class="op">[</span>t<span class="op">]))</span></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>                    t <span class="op">=</span> j<span class="op">;</span></span><span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> j <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> j <span class="op">&lt;=</span> n<span class="op">;</span> j <span class="op">++</span> <span class="op">)</span></span><span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>            dist<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> min<span class="op">(</span>dist<span class="op">[</span>j<span class="op">],</span> dist<span class="op">[</span>t<span class="op">]</span> <span class="op">+</span> g<span class="op">[</span>t<span class="op">][</span>j<span class="op">]);</span> </span><span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>        st<span class="op">[</span>t<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>n<span class="op">]</span> <span class="op">==</span> <span class="bn">0x3f3f3f3f</span><span class="op">)</span>  <span class="cf">return</span> <span class="op">-</span><span class="dv">1</span><span class="op">;</span></span><span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>    <span class="cf">else</span> <span class="cf">return</span> dist<span class="op">[</span>n<span class="op">];</span></span><span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="堆优化版本">堆优化版本</h4><p>(优化的是找出距离最近的点这一步)</p><div class="sourceCode" id="cb2"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> add<span class="op">(</span><span class="dt">int</span> a<span class="op">,</span> <span class="dt">int</span> b<span class="op">,</span> <span class="dt">int</span> c<span class="op">)</span>  <span class="co">// 邻接表存边</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    e<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> b<span class="op">,</span> w<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> c<span class="op">,</span> ne<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> h<span class="op">[</span>a<span class="op">],</span> h<span class="op">[</span>a<span class="op">]</span> <span class="op">=</span> idx <span class="op">++</span> <span class="op">;</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dijkstra<span class="op">()</span></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>dist<span class="op">,</span> <span class="bn">0x3f</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>dist<span class="op">));</span>  <span class="co">//  初始化距离为正无穷</span></span><span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>    priority_queue<span class="op">&lt;</span>PII<span class="op">,</span> vector<span class="op">&lt;</span>PII<span class="op">&gt;,</span> greater<span class="op">&lt;</span>PII<span class="op">&gt;</span> <span class="op">&gt;</span> heap<span class="op">;</span>  <span class="co">// 元素种类为PII的小根堆</span></span><span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    dist<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>    heap<span class="op">.</span>push<span class="op">(</span>make_pair<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">1</span><span class="op">));</span>  <span class="co">//  由于小根堆中的pair会默认按第一个元素排序，所以这里将距离存到前面</span></span><span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>heap<span class="op">.</span>size<span class="op">())</span></span><span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">auto</span> t <span class="op">=</span> heap<span class="op">.</span>top<span class="op">();</span></span><span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>        heap<span class="op">.</span>pop<span class="op">();</span></span><span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> distance <span class="op">=</span> t<span class="op">.</span>first<span class="op">,</span> ver <span class="op">=</span> t<span class="op">.</span>second<span class="op">;</span></span><span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>st<span class="op">[</span>ver<span class="op">])</span> <span class="cf">continue</span><span class="op">;</span></span><span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>        st<span class="op">[</span>ver<span class="op">]</span>  <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> h<span class="op">[</span>ver<span class="op">];</span> i <span class="op">!=</span> <span class="op">-</span><span class="dv">1</span><span class="op">;</span> i <span class="op">=</span> ne<span class="op">[</span>i<span class="op">]</span> <span class="op">)</span>  <span class="co">//  注意i初始化ver的头指针h[ver]</span></span><span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>            <span class="dt">int</span> j <span class="op">=</span> e<span class="op">[</span>i<span class="op">];</span>  <span class="co">// 取点</span></span><span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>distance <span class="op">+</span> w<span class="op">[</span>i<span class="op">]</span> <span class="op">&lt;</span> dist<span class="op">[</span>j<span class="op">])</span> </span><span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>                dist<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> distance <span class="op">+</span> w<span class="op">[</span>i<span class="op">];</span></span><span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>                heap<span class="op">.</span>push<span class="op">(</span>make_pair<span class="op">(</span>dist<span class="op">[</span>j<span class="op">],</span> j<span class="op">));</span></span><span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>n<span class="op">]</span> <span class="op">==</span> <span class="bn">0x3f3f3f3f</span><span class="op">)</span>  <span class="cf">return</span> <span class="op">-</span><span class="dv">1</span><span class="op">;</span></span><span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>    <span class="cf">else</span> <span class="cf">return</span> dist<span class="op">[</span>n<span class="op">];</span></span><span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="vector存图">vector存图</h4><div class="sourceCode" id="cb3"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;bits/stdc++.h&gt;</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#define debug</span><span class="op">(</span>x<span class="op">)</span><span class="pp"> </span>cout<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> #</span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span><span class="st">&quot; = &quot;</span><span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>x<span class="pp"> </span><span class="op">&lt;&lt;</span><span class="pp"> </span>endl</span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#define xx </span>first</span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="pp">#define yy </span>second</span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">1e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">,</span> mod <span class="op">=</span> <span class="fl">1e9</span> <span class="op">+</span> <span class="dv">7</span><span class="op">;</span></span><span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a><span class="co">//const double esp = 1e-6;</span></span><span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dist<span class="op">[</span>N<span class="op">];</span></span><span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> st<span class="op">[</span>N<span class="op">];</span></span><span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> n<span class="op">,</span> m<span class="op">;</span></span><span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n <span class="op">&gt;&gt;</span> m<span class="op">;</span></span><span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>    vector<span class="op">&lt;</span>vector<span class="op">&lt;</span>PII<span class="op">&gt;&gt;</span> g<span class="op">(</span>n<span class="op">);</span></span><span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> m<span class="op">;</span> i <span class="op">++)</span></span><span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">,</span> b<span class="op">,</span> c<span class="op">;</span></span><span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b <span class="op">&gt;&gt;</span> c<span class="op">;</span></span><span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>        a <span class="op">--,</span> b <span class="op">--;</span></span><span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a>        g<span class="op">[</span>a<span class="op">].</span>push_back<span class="op">(&#123;</span>b<span class="op">,</span> c<span class="op">&#125;);</span></span><span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a>    <span class="kw">auto</span> dijkstra <span class="op">=</span> <span class="op">[&amp;]()</span></span><span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a>        memset<span class="op">(</span>dist<span class="op">,</span> <span class="bn">0x3f</span><span class="op">,</span> <span class="kw">sizeof</span> dist<span class="op">);</span></span><span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a>        memset<span class="op">(</span>st<span class="op">,</span> <span class="kw">false</span><span class="op">,</span> <span class="kw">sizeof</span> st<span class="op">);</span></span><span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a>        priority_queue<span class="op">&lt;</span>PII<span class="op">,</span> vector<span class="op">&lt;</span>PII<span class="op">&gt;,</span> greater<span class="op">&lt;</span>PII<span class="op">&gt;</span> <span class="op">&gt;</span> q<span class="op">;</span></span><span id="cb3-31"><a href="#cb3-31" aria-hidden="true" tabindex="-1"></a>        dist<span class="op">[</span><span class="dv">0</span><span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb3-32"><a href="#cb3-32" aria-hidden="true" tabindex="-1"></a>        q<span class="op">.</span>push<span class="op">(&#123;</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">&#125;);</span></span><span id="cb3-33"><a href="#cb3-33" aria-hidden="true" tabindex="-1"></a>        <span class="cf">while</span><span class="op">(</span>q<span class="op">.</span>size<span class="op">())</span></span><span id="cb3-34"><a href="#cb3-34" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb3-35"><a href="#cb3-35" aria-hidden="true" tabindex="-1"></a>            <span class="kw">auto</span> t <span class="op">=</span> q<span class="op">.</span>top<span class="op">();</span></span><span id="cb3-36"><a href="#cb3-36" aria-hidden="true" tabindex="-1"></a>            q<span class="op">.</span>pop<span class="op">();</span></span><span id="cb3-37"><a href="#cb3-37" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>st<span class="op">[</span>t<span class="op">.</span>yy<span class="op">])</span> <span class="cf">continue</span><span class="op">;</span></span><span id="cb3-38"><a href="#cb3-38" aria-hidden="true" tabindex="-1"></a>            st<span class="op">[</span>t<span class="op">.</span>yy<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span> </span><span id="cb3-39"><a href="#cb3-39" aria-hidden="true" tabindex="-1"></a>            <span class="cf">for</span><span class="op">(</span><span class="kw">auto</span> <span class="op">[</span>u<span class="op">,</span> v<span class="op">]</span> <span class="op">:</span> g<span class="op">[</span>t<span class="op">.</span>yy<span class="op">])</span></span><span id="cb3-40"><a href="#cb3-40" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb3-41"><a href="#cb3-41" aria-hidden="true" tabindex="-1"></a>                <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>u<span class="op">]</span> <span class="op">&gt;</span> t<span class="op">.</span>xx <span class="op">+</span> v<span class="op">)</span></span><span id="cb3-42"><a href="#cb3-42" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#123;</span></span><span id="cb3-43"><a href="#cb3-43" aria-hidden="true" tabindex="-1"></a>                    dist<span class="op">[</span>u<span class="op">]</span> <span class="op">=</span> t<span class="op">.</span>xx <span class="op">+</span> v<span class="op">;</span></span><span id="cb3-44"><a href="#cb3-44" aria-hidden="true" tabindex="-1"></a>                    q<span class="op">.</span>push<span class="op">(&#123;</span>dist<span class="op">[</span>u<span class="op">],</span> u<span class="op">&#125;);</span></span><span id="cb3-45"><a href="#cb3-45" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#125;</span></span><span id="cb3-46"><a href="#cb3-46" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb3-47"><a href="#cb3-47" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb3-48"><a href="#cb3-48" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;;</span></span><span id="cb3-49"><a href="#cb3-49" aria-hidden="true" tabindex="-1"></a>    dijkstra<span class="op">();</span></span><span id="cb3-50"><a href="#cb3-50" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>n <span class="op">-</span> <span class="dv">1</span><span class="op">]</span> <span class="op">==</span> <span class="bn">0x3f3f3f3f</span><span class="op">)</span> cout <span class="op">&lt;&lt;</span> <span class="st">&quot;-1&quot;</span><span class="op">;</span></span><span id="cb3-51"><a href="#cb3-51" aria-hidden="true" tabindex="-1"></a>    <span class="cf">else</span> cout <span class="op">&lt;&lt;</span> dist<span class="op">[</span>n <span class="op">-</span> <span class="dv">1</span><span class="op">]</span> <span class="op">&lt;&lt;</span> <span class="ch">&#39;</span><span class="sc">\n</span><span class="ch">&#39;</span><span class="op">;</span></span><span id="cb3-52"><a href="#cb3-52" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb3-53"><a href="#cb3-53" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="邮递员送信">邮递员送信</h4><p>邮递员去送信然后要求送信后再返回（有向边）</p><p>解法：</p><p>反向建边+跑两次dijkstra 正着走过去的时候用一遍dijkstra。返回时就建个返图跑一遍dijkstra。反图可以把所有结点的编号+n建在原图的体系中。</p><div class="sourceCode" id="cb4"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;queue&gt;</span></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">2e5</span> <span class="op">+</span> <span class="dv">5</span><span class="op">;</span>  <span class="co">//  数组记得开够</span></span><span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> n<span class="op">,</span> m<span class="op">;</span></span><span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> h<span class="op">[</span>N<span class="op">],</span> ne<span class="op">[</span>N<span class="op">],</span> w<span class="op">[</span>N<span class="op">],</span> e<span class="op">[</span>N<span class="op">],</span> idx<span class="op">;</span></span><span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dist<span class="op">[</span>N<span class="op">];</span></span><span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> st<span class="op">[</span>N<span class="op">];</span></span><span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> add<span class="op">(</span><span class="dt">int</span> a<span class="op">,</span> <span class="dt">int</span> b<span class="op">,</span> <span class="dt">int</span> c<span class="op">)</span></span><span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>    e<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> b<span class="op">,</span> w<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> c<span class="op">,</span> ne<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> h<span class="op">[</span>a<span class="op">],</span> h<span class="op">[</span>a<span class="op">]</span> <span class="op">=</span> idx <span class="op">++</span> <span class="op">;</span></span><span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> dijkstra<span class="op">(</span><span class="dt">int</span> fir<span class="op">)</span></span><span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span>   </span><span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>dist<span class="op">,</span> <span class="bn">0x3f</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>dist<span class="op">));</span></span><span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a>    priority_queue<span class="op">&lt;</span>PII<span class="op">,</span> vector<span class="op">&lt;</span>PII<span class="op">&gt;,</span> greater<span class="op">&lt;</span>PII<span class="op">&gt;</span> <span class="op">&gt;</span>heap<span class="op">;</span></span><span id="cb4-24"><a href="#cb4-24" aria-hidden="true" tabindex="-1"></a>    dist<span class="op">[</span>fir<span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb4-25"><a href="#cb4-25" aria-hidden="true" tabindex="-1"></a>    heap<span class="op">.</span>push<span class="op">(</span>make_pair<span class="op">(</span><span class="dv">0</span><span class="op">,</span> fir<span class="op">));</span></span><span id="cb4-26"><a href="#cb4-26" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>heap<span class="op">.</span>size<span class="op">())</span></span><span id="cb4-27"><a href="#cb4-27" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb4-28"><a href="#cb4-28" aria-hidden="true" tabindex="-1"></a>        PII t <span class="op">=</span> heap<span class="op">.</span>top<span class="op">();</span></span><span id="cb4-29"><a href="#cb4-29" aria-hidden="true" tabindex="-1"></a>        heap<span class="op">.</span>pop<span class="op">();</span></span><span id="cb4-30"><a href="#cb4-30" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> distance <span class="op">=</span> t<span class="op">.</span>first<span class="op">,</span> ver <span class="op">=</span> t<span class="op">.</span>second<span class="op">;</span></span><span id="cb4-31"><a href="#cb4-31" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>st<span class="op">[</span>ver<span class="op">])</span>  <span class="cf">continue</span><span class="op">;</span></span><span id="cb4-32"><a href="#cb4-32" aria-hidden="true" tabindex="-1"></a>        st<span class="op">[</span>ver<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb4-33"><a href="#cb4-33" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> h<span class="op">[</span>ver<span class="op">];</span> i <span class="op">!=</span> <span class="op">-</span><span class="dv">1</span><span class="op">;</span> i <span class="op">=</span> ne<span class="op">[</span>i<span class="op">])</span></span><span id="cb4-34"><a href="#cb4-34" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb4-35"><a href="#cb4-35" aria-hidden="true" tabindex="-1"></a>            <span class="dt">int</span> j <span class="op">=</span> e<span class="op">[</span>i<span class="op">];</span></span><span id="cb4-36"><a href="#cb4-36" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>j<span class="op">]</span> <span class="op">&gt;</span> distance <span class="op">+</span> w<span class="op">[</span>i<span class="op">])</span></span><span id="cb4-37"><a href="#cb4-37" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb4-38"><a href="#cb4-38" aria-hidden="true" tabindex="-1"></a>                dist<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> distance <span class="op">+</span> w<span class="op">[</span>i<span class="op">];</span></span><span id="cb4-39"><a href="#cb4-39" aria-hidden="true" tabindex="-1"></a>                heap<span class="op">.</span>push<span class="op">(</span>make_pair<span class="op">(</span>dist<span class="op">[</span>j<span class="op">],</span> j<span class="op">));</span></span><span id="cb4-40"><a href="#cb4-40" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb4-41"><a href="#cb4-41" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb4-42"><a href="#cb4-42" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb4-43"><a href="#cb4-43" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb4-44"><a href="#cb4-44" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-45"><a href="#cb4-45" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb4-46"><a href="#cb4-46" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb4-47"><a href="#cb4-47" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n <span class="op">&gt;&gt;</span> m<span class="op">;</span></span><span id="cb4-48"><a href="#cb4-48" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>h<span class="op">,</span> <span class="op">-</span><span class="dv">1</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>h<span class="op">));</span></span><span id="cb4-49"><a href="#cb4-49" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>m <span class="op">--</span> <span class="op">)</span></span><span id="cb4-50"><a href="#cb4-50" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb4-51"><a href="#cb4-51" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">,</span> b<span class="op">,</span> c<span class="op">;</span></span><span id="cb4-52"><a href="#cb4-52" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b <span class="op">&gt;&gt;</span> c<span class="op">;</span></span><span id="cb4-53"><a href="#cb4-53" aria-hidden="true" tabindex="-1"></a>        add<span class="op">(</span>a<span class="op">,</span> b<span class="op">,</span> c<span class="op">);</span></span><span id="cb4-54"><a href="#cb4-54" aria-hidden="true" tabindex="-1"></a>        add<span class="op">(</span>b <span class="op">+</span> n<span class="op">,</span> a <span class="op">+</span> n<span class="op">,</span> c<span class="op">);</span>  <span class="co">//  建一个反图</span></span><span id="cb4-55"><a href="#cb4-55" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb4-56"><a href="#cb4-56" aria-hidden="true" tabindex="-1"></a>    dijkstra<span class="op">(</span><span class="dv">1</span><span class="op">);</span></span><span id="cb4-57"><a href="#cb4-57" aria-hidden="true" tabindex="-1"></a>    LL res <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb4-58"><a href="#cb4-58" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb4-59"><a href="#cb4-59" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb4-60"><a href="#cb4-60" aria-hidden="true" tabindex="-1"></a>        res <span class="op">+=</span> dist<span class="op">[</span>i<span class="op">];</span></span><span id="cb4-61"><a href="#cb4-61" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb4-62"><a href="#cb4-62" aria-hidden="true" tabindex="-1"></a>    dijkstra<span class="op">(</span><span class="dv">1</span> <span class="op">+</span> n<span class="op">);</span>  <span class="co">//  反向跑一次dijkstra</span></span><span id="cb4-63"><a href="#cb4-63" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span> <span class="op">+</span> n<span class="op">;</span> i <span class="op">&lt;=</span> <span class="dv">2</span> <span class="op">*</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb4-64"><a href="#cb4-64" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb4-65"><a href="#cb4-65" aria-hidden="true" tabindex="-1"></a>        res <span class="op">+=</span> dist<span class="op">[</span>i<span class="op">];</span></span><span id="cb4-66"><a href="#cb4-66" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb4-67"><a href="#cb4-67" aria-hidden="true" tabindex="-1"></a>    cout <span class="op">&lt;&lt;</span> res<span class="op">;</span></span><span id="cb4-68"><a href="#cb4-68" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb4-69"><a href="#cb4-69" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="最短路计数">最短路计数</h4><p>增加一个num数组进行计数</p><div class="sourceCode" id="cb5"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;queue&gt;</span></span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> LL<span class="op">;</span></span><span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> pair<span class="op">&lt;</span><span class="dt">int</span><span class="op">,</span> <span class="dt">int</span><span class="op">&gt;</span> PII<span class="op">;</span></span><span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">2e6</span> <span class="op">+</span> <span class="dv">5</span><span class="op">,</span> mod <span class="op">=</span> <span class="dv">100003</span><span class="op">;</span></span><span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> n<span class="op">,</span> m<span class="op">;</span></span><span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> h<span class="op">[</span>N<span class="op">],</span> ne<span class="op">[</span>N<span class="op">],</span> w<span class="op">[</span>N<span class="op">],</span> e<span class="op">[</span>N<span class="op">],</span> idx<span class="op">;</span></span><span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dist<span class="op">[</span>N<span class="op">],</span> num<span class="op">[</span>N<span class="op">];</span></span><span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> st<span class="op">[</span>N<span class="op">];</span></span><span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> add<span class="op">(</span><span class="dt">int</span> a<span class="op">,</span> <span class="dt">int</span> b<span class="op">,</span> <span class="dt">int</span> c<span class="op">)</span></span><span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>    e<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> b<span class="op">,</span> w<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> c<span class="op">,</span> ne<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> h<span class="op">[</span>a<span class="op">],</span> h<span class="op">[</span>a<span class="op">]</span> <span class="op">=</span> idx <span class="op">++</span> <span class="op">;</span></span><span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> dijkstra<span class="op">()</span></span><span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb5-22"><a href="#cb5-22" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>dist<span class="op">,</span> <span class="bn">0x3f</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>dist<span class="op">));</span></span><span id="cb5-23"><a href="#cb5-23" aria-hidden="true" tabindex="-1"></a>    dist<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb5-24"><a href="#cb5-24" aria-hidden="true" tabindex="-1"></a>    num<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">1</span><span class="op">;</span></span><span id="cb5-25"><a href="#cb5-25" aria-hidden="true" tabindex="-1"></a>    priority_queue<span class="op">&lt;</span>PII<span class="op">,</span> vector<span class="op">&lt;</span>PII<span class="op">&gt;,</span> greater<span class="op">&lt;</span>PII<span class="op">&gt;</span> <span class="op">&gt;</span> heap<span class="op">;</span></span><span id="cb5-26"><a href="#cb5-26" aria-hidden="true" tabindex="-1"></a>    heap<span class="op">.</span>push<span class="op">(</span>make_pair<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">1</span><span class="op">));</span></span><span id="cb5-27"><a href="#cb5-27" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>heap<span class="op">.</span>size<span class="op">())</span></span><span id="cb5-28"><a href="#cb5-28" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb5-29"><a href="#cb5-29" aria-hidden="true" tabindex="-1"></a>        PII t <span class="op">=</span> heap<span class="op">.</span>top<span class="op">();</span></span><span id="cb5-30"><a href="#cb5-30" aria-hidden="true" tabindex="-1"></a>        heap<span class="op">.</span>pop<span class="op">();</span></span><span id="cb5-31"><a href="#cb5-31" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> distance <span class="op">=</span> t<span class="op">.</span>first<span class="op">,</span> ver <span class="op">=</span> t<span class="op">.</span>second<span class="op">;</span></span><span id="cb5-32"><a href="#cb5-32" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>st<span class="op">[</span>ver<span class="op">])</span> <span class="cf">continue</span><span class="op">;</span></span><span id="cb5-33"><a href="#cb5-33" aria-hidden="true" tabindex="-1"></a>        st<span class="op">[</span>ver<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb5-34"><a href="#cb5-34" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> h<span class="op">[</span>ver<span class="op">];</span> i <span class="op">!=</span> <span class="op">-</span><span class="dv">1</span><span class="op">;</span> i <span class="op">=</span> ne<span class="op">[</span>i<span class="op">])</span></span><span id="cb5-35"><a href="#cb5-35" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb5-36"><a href="#cb5-36" aria-hidden="true" tabindex="-1"></a>            <span class="dt">int</span> j <span class="op">=</span> e<span class="op">[</span>i<span class="op">];</span></span><span id="cb5-37"><a href="#cb5-37" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>j<span class="op">]</span> <span class="op">==</span> distance <span class="op">+</span> w<span class="op">[</span>i<span class="op">])</span></span><span id="cb5-38"><a href="#cb5-38" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb5-39"><a href="#cb5-39" aria-hidden="true" tabindex="-1"></a>                num<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> <span class="op">(</span>num<span class="op">[</span>j<span class="op">]</span> <span class="op">+</span> num<span class="op">[</span>ver<span class="op">])</span> <span class="op">%</span> mod<span class="op">;</span></span><span id="cb5-40"><a href="#cb5-40" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb5-41"><a href="#cb5-41" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>j<span class="op">]</span> <span class="op">&gt;</span> distance <span class="op">+</span> w<span class="op">[</span>i<span class="op">])</span></span><span id="cb5-42"><a href="#cb5-42" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb5-43"><a href="#cb5-43" aria-hidden="true" tabindex="-1"></a>                dist<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> distance <span class="op">+</span> w<span class="op">[</span>i<span class="op">];</span></span><span id="cb5-44"><a href="#cb5-44" aria-hidden="true" tabindex="-1"></a>                num<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> num<span class="op">[</span>ver<span class="op">];</span></span><span id="cb5-45"><a href="#cb5-45" aria-hidden="true" tabindex="-1"></a>                heap<span class="op">.</span>push<span class="op">(</span>make_pair<span class="op">(</span>dist<span class="op">[</span>j<span class="op">],</span> j<span class="op">));</span></span><span id="cb5-46"><a href="#cb5-46" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb5-47"><a href="#cb5-47" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb5-48"><a href="#cb5-48" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb5-49"><a href="#cb5-49" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb5-50"><a href="#cb5-50" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-51"><a href="#cb5-51" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb5-52"><a href="#cb5-52" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb5-53"><a href="#cb5-53" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n <span class="op">&gt;&gt;</span> m<span class="op">;</span></span><span id="cb5-54"><a href="#cb5-54" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>h<span class="op">,</span> <span class="op">-</span><span class="dv">1</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>h<span class="op">));</span></span><span id="cb5-55"><a href="#cb5-55" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>m <span class="op">--</span> <span class="op">)</span></span><span id="cb5-56"><a href="#cb5-56" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb5-57"><a href="#cb5-57" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">,</span> b<span class="op">;</span></span><span id="cb5-58"><a href="#cb5-58" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b<span class="op">;</span></span><span id="cb5-59"><a href="#cb5-59" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>a <span class="op">==</span> b<span class="op">)</span> <span class="cf">continue</span><span class="op">;</span></span><span id="cb5-60"><a href="#cb5-60" aria-hidden="true" tabindex="-1"></a>        add<span class="op">(</span>a<span class="op">,</span> b<span class="op">,</span> <span class="dv">1</span><span class="op">);</span></span><span id="cb5-61"><a href="#cb5-61" aria-hidden="true" tabindex="-1"></a>        add<span class="op">(</span>b<span class="op">,</span> a<span class="op">,</span> <span class="dv">1</span><span class="op">);</span></span><span id="cb5-62"><a href="#cb5-62" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb5-63"><a href="#cb5-63" aria-hidden="true" tabindex="-1"></a>    dijkstra<span class="op">();</span></span><span id="cb5-64"><a href="#cb5-64" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb5-65"><a href="#cb5-65" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb5-66"><a href="#cb5-66" aria-hidden="true" tabindex="-1"></a>        printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d\n</span><span class="st">&quot;</span><span class="op">,</span> num<span class="op">[</span>i<span class="op">]);</span></span><span id="cb5-67"><a href="#cb5-67" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb5-68"><a href="#cb5-68" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb5-69"><a href="#cb5-69" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h3 id="bellman-ford算法">bellman-ford算法</h3><p>适用于有负权边的情况</p><p><span class="math inline">\(O(n \cdot m)\)</span></p><p>如果有负环，或限制最多走k次时可以用，大多数时候用SPFA完全替代</p><div class="sourceCode" id="cb6"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="dv">510</span><span class="op">,</span> M <span class="op">=</span> <span class="dv">10010</span><span class="op">;</span></span><span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> n<span class="op">,</span> m<span class="op">,</span> k<span class="op">;</span>  <span class="co">//  n个点，m条边，走不超过k次</span></span><span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a><span class="kw">struct</span> Edge</span><span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> a<span class="op">,</span> b<span class="op">,</span> c<span class="op">;</span></span><span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span>edge<span class="op">[</span>M<span class="op">];</span></span><span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dist<span class="op">[</span>N<span class="op">],</span> backup<span class="op">[</span>N<span class="op">];</span></span><span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> Bellman_ford<span class="op">()</span></span><span id="cb6-18"><a href="#cb6-18" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb6-19"><a href="#cb6-19" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>dist<span class="op">,</span> <span class="bn">0x3f</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>dist<span class="op">));</span></span><span id="cb6-20"><a href="#cb6-20" aria-hidden="true" tabindex="-1"></a>    dist<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb6-21"><a href="#cb6-21" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> k<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb6-22"><a href="#cb6-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb6-23"><a href="#cb6-23" aria-hidden="true" tabindex="-1"></a>        memcpy<span class="op">(</span>backup<span class="op">,</span> dist<span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>dist<span class="op">));</span></span><span id="cb6-24"><a href="#cb6-24" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> j <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> j <span class="op">&lt;=</span> m<span class="op">;</span> j <span class="op">++</span> <span class="op">)</span></span><span id="cb6-25"><a href="#cb6-25" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb6-26"><a href="#cb6-26" aria-hidden="true" tabindex="-1"></a>            Edge e <span class="op">=</span> edge<span class="op">[</span>j<span class="op">];</span></span><span id="cb6-27"><a href="#cb6-27" aria-hidden="true" tabindex="-1"></a>            dist<span class="op">[</span>e<span class="op">.</span>b<span class="op">]</span> <span class="op">=</span> min<span class="op">(</span>dist<span class="op">[</span>e<span class="op">.</span>b<span class="op">],</span> backup<span class="op">[</span>e<span class="op">.</span>a<span class="op">]</span> <span class="op">+</span> e<span class="op">.</span>c<span class="op">);</span></span><span id="cb6-28"><a href="#cb6-28" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb6-29"><a href="#cb6-29" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb6-30"><a href="#cb6-30" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb6-31"><a href="#cb6-31" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-32"><a href="#cb6-32" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb6-33"><a href="#cb6-33" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb6-34"><a href="#cb6-34" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n <span class="op">&gt;&gt;</span> m <span class="op">&gt;&gt;</span> k<span class="op">;</span></span><span id="cb6-35"><a href="#cb6-35" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> m<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb6-36"><a href="#cb6-36" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb6-37"><a href="#cb6-37" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">,</span> b<span class="op">,</span> c<span class="op">;</span></span><span id="cb6-38"><a href="#cb6-38" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b <span class="op">&gt;&gt;</span> c<span class="op">;</span></span><span id="cb6-39"><a href="#cb6-39" aria-hidden="true" tabindex="-1"></a>        edge<span class="op">[</span>i<span class="op">].</span>a <span class="op">=</span> a<span class="op">,</span> edge<span class="op">[</span>i<span class="op">].</span>b <span class="op">=</span> b<span class="op">,</span> edge<span class="op">[</span>i<span class="op">].</span>c <span class="op">=</span> c<span class="op">;</span></span><span id="cb6-40"><a href="#cb6-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb6-41"><a href="#cb6-41" aria-hidden="true" tabindex="-1"></a>    Bellman_ford<span class="op">();</span></span><span id="cb6-42"><a href="#cb6-42" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>n<span class="op">]</span> <span class="op">&gt;</span> <span class="bn">0x3f3f3f3f</span> <span class="op">/</span> <span class="dv">2</span><span class="op">)</span>  printf<span class="op">(</span><span class="st">&quot;impossible</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb6-43"><a href="#cb6-43" aria-hidden="true" tabindex="-1"></a>    <span class="cf">else</span> printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d\n</span><span class="st">&quot;</span><span class="op">,</span> dist<span class="op">[</span>n<span class="op">]);</span></span><span id="cb6-44"><a href="#cb6-44" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb6-45"><a href="#cb6-45" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h3 id="spfa算法">SPFA算法</h3><p>利用宽搜BFS进行优化</p><p>适用于有负权边的情况</p><p>如果存在负环则不能用</p><p><span class="math inline">\(O(m)\)</span>，最坏情况<spanclass="math inline">\(O(n\cdot m)\)</span></p><h4 id="朴素版本-1">朴素版本</h4><div class="sourceCode" id="cb7"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;queue&gt;</span></span><span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="dv">100010</span><span class="op">;</span></span><span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> n<span class="op">,</span> m<span class="op">;</span></span><span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> e<span class="op">[</span>N<span class="op">],</span> w<span class="op">[</span>N<span class="op">],</span> ne<span class="op">[</span>N<span class="op">],</span> h<span class="op">[</span>N<span class="op">],</span> idx<span class="op">;</span></span><span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dist<span class="op">[</span>N<span class="op">];</span></span><span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> st<span class="op">[</span>N<span class="op">];</span></span><span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> add<span class="op">(</span><span class="dt">int</span> a<span class="op">,</span> <span class="dt">int</span> b<span class="op">,</span> <span class="dt">int</span> c<span class="op">)</span></span><span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a>    e<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> b<span class="op">,</span> w<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> c<span class="op">,</span> ne<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> h<span class="op">[</span>a<span class="op">],</span> h<span class="op">[</span>a<span class="op">]</span> <span class="op">=</span> idx <span class="op">++</span> <span class="op">;</span></span><span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> spfa<span class="op">()</span></span><span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb7-21"><a href="#cb7-21" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>dist<span class="op">,</span> <span class="bn">0x3f</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>dist<span class="op">));</span></span><span id="cb7-22"><a href="#cb7-22" aria-hidden="true" tabindex="-1"></a>    dist<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb7-23"><a href="#cb7-23" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-24"><a href="#cb7-24" aria-hidden="true" tabindex="-1"></a>    queue<span class="op">&lt;</span><span class="dt">int</span><span class="op">&gt;</span> q<span class="op">;</span></span><span id="cb7-25"><a href="#cb7-25" aria-hidden="true" tabindex="-1"></a>    q<span class="op">.</span>push<span class="op">(</span><span class="dv">1</span><span class="op">);</span></span><span id="cb7-26"><a href="#cb7-26" aria-hidden="true" tabindex="-1"></a>    st<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb7-27"><a href="#cb7-27" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-28"><a href="#cb7-28" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>q<span class="op">.</span>size<span class="op">())</span></span><span id="cb7-29"><a href="#cb7-29" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb7-30"><a href="#cb7-30" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> t <span class="op">=</span> q<span class="op">.</span>front<span class="op">();</span></span><span id="cb7-31"><a href="#cb7-31" aria-hidden="true" tabindex="-1"></a>        q<span class="op">.</span>pop<span class="op">();</span></span><span id="cb7-32"><a href="#cb7-32" aria-hidden="true" tabindex="-1"></a>        st<span class="op">[</span>t<span class="op">]</span> <span class="op">=</span> <span class="kw">false</span><span class="op">;</span></span><span id="cb7-33"><a href="#cb7-33" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> h<span class="op">[</span>t<span class="op">];</span> i <span class="op">!=</span> <span class="op">-</span><span class="dv">1</span><span class="op">;</span> i <span class="op">=</span> ne<span class="op">[</span>i<span class="op">])</span>  <span class="co">// i = h[t]忘记写h了易错！！！</span></span><span id="cb7-34"><a href="#cb7-34" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb7-35"><a href="#cb7-35" aria-hidden="true" tabindex="-1"></a>            <span class="dt">int</span> j <span class="op">=</span> e<span class="op">[</span>i<span class="op">];</span></span><span id="cb7-36"><a href="#cb7-36" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>j<span class="op">]</span> <span class="op">&gt;</span> dist<span class="op">[</span>t<span class="op">]</span> <span class="op">+</span> w<span class="op">[</span>i<span class="op">])</span></span><span id="cb7-37"><a href="#cb7-37" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb7-38"><a href="#cb7-38" aria-hidden="true" tabindex="-1"></a>                dist<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> dist<span class="op">[</span>t<span class="op">]</span> <span class="op">+</span> w<span class="op">[</span>i<span class="op">];</span></span><span id="cb7-39"><a href="#cb7-39" aria-hidden="true" tabindex="-1"></a>                <span class="cf">if</span><span class="op">(!</span>st<span class="op">[</span>j<span class="op">])</span></span><span id="cb7-40"><a href="#cb7-40" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#123;</span></span><span id="cb7-41"><a href="#cb7-41" aria-hidden="true" tabindex="-1"></a>                    q<span class="op">.</span>push<span class="op">(</span>j<span class="op">);</span>  <span class="co">//  记得推进队列之中去</span></span><span id="cb7-42"><a href="#cb7-42" aria-hidden="true" tabindex="-1"></a>                    st<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb7-43"><a href="#cb7-43" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#125;</span></span><span id="cb7-44"><a href="#cb7-44" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb7-45"><a href="#cb7-45" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb7-46"><a href="#cb7-46" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb7-47"><a href="#cb7-47" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> dist<span class="op">[</span>n<span class="op">];</span></span><span id="cb7-48"><a href="#cb7-48" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb7-49"><a href="#cb7-49" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-50"><a href="#cb7-50" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb7-51"><a href="#cb7-51" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb7-52"><a href="#cb7-52" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n <span class="op">&gt;&gt;</span> m<span class="op">;</span></span><span id="cb7-53"><a href="#cb7-53" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>h<span class="op">,</span> <span class="op">-</span><span class="dv">1</span><span class="op">,</span> <span class="kw">sizeof</span> h<span class="op">);</span></span><span id="cb7-54"><a href="#cb7-54" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>m <span class="op">--</span> <span class="op">)</span></span><span id="cb7-55"><a href="#cb7-55" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb7-56"><a href="#cb7-56" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">,</span> b<span class="op">,</span> c<span class="op">;</span></span><span id="cb7-57"><a href="#cb7-57" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b <span class="op">&gt;&gt;</span> c<span class="op">;</span></span><span id="cb7-58"><a href="#cb7-58" aria-hidden="true" tabindex="-1"></a>        add<span class="op">(</span>a<span class="op">,</span> b<span class="op">,</span> c<span class="op">);</span></span><span id="cb7-59"><a href="#cb7-59" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb7-60"><a href="#cb7-60" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> t <span class="op">=</span> spfa<span class="op">();</span></span><span id="cb7-61"><a href="#cb7-61" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span><span class="op">(</span>t <span class="op">==</span> <span class="bn">0x3f3f3f3f</span><span class="op">)</span>  printf<span class="op">(</span><span class="st">&quot;impossible</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb7-62"><a href="#cb7-62" aria-hidden="true" tabindex="-1"></a>    <span class="cf">else</span> printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d\n</span><span class="st">&quot;</span><span class="op">,</span> t<span class="op">);</span></span><span id="cb7-63"><a href="#cb7-63" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb7-64"><a href="#cb7-64" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><h4 id="spfa判断负环">SPFA判断负环</h4><div class="sourceCode" id="cb8"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;queue&gt;</span></span><span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="fl">1e5</span> <span class="op">+</span> <span class="dv">10</span><span class="op">;</span></span><span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> n<span class="op">,</span> m<span class="op">;</span></span><span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> h<span class="op">[</span>N<span class="op">],</span> e<span class="op">[</span>N<span class="op">],</span> ne<span class="op">[</span>N<span class="op">],</span> w<span class="op">[</span>N<span class="op">],</span> idx<span class="op">;</span></span><span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dist<span class="op">[</span>N<span class="op">];</span></span><span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> cnt<span class="op">[</span>N<span class="op">];</span></span><span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> st<span class="op">[</span>N<span class="op">];</span></span><span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> add<span class="op">(</span><span class="dt">int</span> a<span class="op">,</span> <span class="dt">int</span> b<span class="op">,</span> <span class="dt">int</span> c<span class="op">)</span></span><span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a>    e<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> b<span class="op">,</span> w<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> c<span class="op">,</span> ne<span class="op">[</span>idx<span class="op">]</span> <span class="op">=</span> h<span class="op">[</span>a<span class="op">],</span> h<span class="op">[</span>a<span class="op">]</span> <span class="op">=</span> idx <span class="op">++</span> <span class="op">;</span></span><span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-21"><a href="#cb8-21" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> spfa<span class="op">()</span></span><span id="cb8-22"><a href="#cb8-22" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb8-23"><a href="#cb8-23" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>dist<span class="op">,</span> <span class="bn">0x3f</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>dist<span class="op">));</span></span><span id="cb8-24"><a href="#cb8-24" aria-hidden="true" tabindex="-1"></a>    memset<span class="op">(</span>cnt<span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>cnt<span class="op">));</span></span><span id="cb8-25"><a href="#cb8-25" aria-hidden="true" tabindex="-1"></a>    queue <span class="op">&lt;</span><span class="dt">int</span><span class="op">&gt;</span> q<span class="op">;</span></span><span id="cb8-26"><a href="#cb8-26" aria-hidden="true" tabindex="-1"></a>    dist<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb8-27"><a href="#cb8-27" aria-hidden="true" tabindex="-1"></a>    <span class="co">//  如果题目说存在负环，那么需要循环一次将所有的点都加入队列之中</span></span><span id="cb8-28"><a href="#cb8-28" aria-hidden="true" tabindex="-1"></a>    <span class="co">//  如果是求是否存在从1开始的负环，那么只将1加入队列之中就可以了</span></span><span id="cb8-29"><a href="#cb8-29" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb8-30"><a href="#cb8-30" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb8-31"><a href="#cb8-31" aria-hidden="true" tabindex="-1"></a>        q<span class="op">.</span>push<span class="op">(</span>i<span class="op">);</span>   </span><span id="cb8-32"><a href="#cb8-32" aria-hidden="true" tabindex="-1"></a>        st<span class="op">[</span>i<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb8-33"><a href="#cb8-33" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb8-34"><a href="#cb8-34" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>q<span class="op">.</span>size<span class="op">())</span></span><span id="cb8-35"><a href="#cb8-35" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb8-36"><a href="#cb8-36" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> t <span class="op">=</span> q<span class="op">.</span>front<span class="op">();</span></span><span id="cb8-37"><a href="#cb8-37" aria-hidden="true" tabindex="-1"></a>        q<span class="op">.</span>pop<span class="op">();</span></span><span id="cb8-38"><a href="#cb8-38" aria-hidden="true" tabindex="-1"></a>        st<span class="op">[</span>t<span class="op">]</span> <span class="op">=</span> <span class="kw">false</span><span class="op">;</span></span><span id="cb8-39"><a href="#cb8-39" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> h<span class="op">[</span>t<span class="op">];</span> i <span class="op">!=</span> <span class="op">-</span><span class="dv">1</span><span class="op">;</span> i <span class="op">=</span> ne<span class="op">[</span>i<span class="op">])</span></span><span id="cb8-40"><a href="#cb8-40" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb8-41"><a href="#cb8-41" aria-hidden="true" tabindex="-1"></a>            <span class="dt">int</span> j <span class="op">=</span> e<span class="op">[</span>i<span class="op">];</span></span><span id="cb8-42"><a href="#cb8-42" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>j<span class="op">]</span> <span class="op">&gt;</span> dist<span class="op">[</span>t<span class="op">]</span> <span class="op">+</span> w<span class="op">[</span>i<span class="op">])</span></span><span id="cb8-43"><a href="#cb8-43" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb8-44"><a href="#cb8-44" aria-hidden="true" tabindex="-1"></a>                dist<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> dist<span class="op">[</span>t<span class="op">]</span> <span class="op">+</span> w<span class="op">[</span>i<span class="op">];</span></span><span id="cb8-45"><a href="#cb8-45" aria-hidden="true" tabindex="-1"></a>                cnt<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> cnt<span class="op">[</span>t<span class="op">]</span> <span class="op">+</span> <span class="dv">1</span><span class="op">;</span> </span><span id="cb8-46"><a href="#cb8-46" aria-hidden="true" tabindex="-1"></a>                <span class="cf">if</span><span class="op">(</span>cnt<span class="op">[</span>j<span class="op">]</span> <span class="op">&gt;=</span> n<span class="op">)</span>  <span class="cf">return</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb8-47"><a href="#cb8-47" aria-hidden="true" tabindex="-1"></a>                <span class="cf">if</span><span class="op">(!</span>st<span class="op">[</span>j<span class="op">])</span></span><span id="cb8-48"><a href="#cb8-48" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#123;</span></span><span id="cb8-49"><a href="#cb8-49" aria-hidden="true" tabindex="-1"></a>                    q<span class="op">.</span>push<span class="op">(</span>j<span class="op">);</span> </span><span id="cb8-50"><a href="#cb8-50" aria-hidden="true" tabindex="-1"></a>                    st<span class="op">[</span>j<span class="op">]</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb8-51"><a href="#cb8-51" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#125;</span></span><span id="cb8-52"><a href="#cb8-52" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb8-53"><a href="#cb8-53" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb8-54"><a href="#cb8-54" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb8-55"><a href="#cb8-55" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">false</span><span class="op">;</span></span><span id="cb8-56"><a href="#cb8-56" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb8-57"><a href="#cb8-57" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-58"><a href="#cb8-58" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb8-59"><a href="#cb8-59" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb8-60"><a href="#cb8-60" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> t<span class="op">;</span></span><span id="cb8-61"><a href="#cb8-61" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> t<span class="op">;</span></span><span id="cb8-62"><a href="#cb8-62" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>t <span class="op">--</span> <span class="op">)</span></span><span id="cb8-63"><a href="#cb8-63" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb8-64"><a href="#cb8-64" aria-hidden="true" tabindex="-1"></a>        memset<span class="op">(</span>h<span class="op">,</span> <span class="op">-</span><span class="dv">1</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>h<span class="op">));</span></span><span id="cb8-65"><a href="#cb8-65" aria-hidden="true" tabindex="-1"></a>        memset<span class="op">(</span>e<span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>e<span class="op">));</span></span><span id="cb8-66"><a href="#cb8-66" aria-hidden="true" tabindex="-1"></a>        memset<span class="op">(</span>ne<span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>ne<span class="op">));</span></span><span id="cb8-67"><a href="#cb8-67" aria-hidden="true" tabindex="-1"></a>        memset<span class="op">(</span>w<span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>w<span class="op">));</span></span><span id="cb8-68"><a href="#cb8-68" aria-hidden="true" tabindex="-1"></a>        memset<span class="op">(</span>st<span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="kw">sizeof</span><span class="op">(</span>st<span class="op">));</span></span><span id="cb8-69"><a href="#cb8-69" aria-hidden="true" tabindex="-1"></a>        idx <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb8-70"><a href="#cb8-70" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> n <span class="op">&gt;&gt;</span> m<span class="op">;</span></span><span id="cb8-71"><a href="#cb8-71" aria-hidden="true" tabindex="-1"></a>        <span class="cf">while</span><span class="op">(</span>m <span class="op">--</span> <span class="op">)</span></span><span id="cb8-72"><a href="#cb8-72" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb8-73"><a href="#cb8-73" aria-hidden="true" tabindex="-1"></a>            <span class="dt">int</span> a<span class="op">,</span> b<span class="op">,</span> w<span class="op">;</span></span><span id="cb8-74"><a href="#cb8-74" aria-hidden="true" tabindex="-1"></a>            cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b <span class="op">&gt;&gt;</span> w<span class="op">;</span></span><span id="cb8-75"><a href="#cb8-75" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>w <span class="op">&gt;=</span> <span class="dv">0</span><span class="op">)</span></span><span id="cb8-76"><a href="#cb8-76" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#123;</span></span><span id="cb8-77"><a href="#cb8-77" aria-hidden="true" tabindex="-1"></a>                add<span class="op">(</span>a<span class="op">,</span> b<span class="op">,</span> w<span class="op">);</span></span><span id="cb8-78"><a href="#cb8-78" aria-hidden="true" tabindex="-1"></a>                add<span class="op">(</span>b<span class="op">,</span> a<span class="op">,</span> w<span class="op">);</span></span><span id="cb8-79"><a href="#cb8-79" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span><span id="cb8-80"><a href="#cb8-80" aria-hidden="true" tabindex="-1"></a>            <span class="cf">else</span>  add<span class="op">(</span>a<span class="op">,</span> b<span class="op">,</span> w<span class="op">);</span> </span><span id="cb8-81"><a href="#cb8-81" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb8-82"><a href="#cb8-82" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>spfa<span class="op">())</span>  printf<span class="op">(</span><span class="st">&quot;YES</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb8-83"><a href="#cb8-83" aria-hidden="true" tabindex="-1"></a>        <span class="cf">else</span> printf<span class="op">(</span><span class="st">&quot;NO</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb8-84"><a href="#cb8-84" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb8-85"><a href="#cb8-85" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb8-86"><a href="#cb8-86" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div><p>用cnt[]数组进行判断，如果cnt[j]大于n说明存在负环使得求最短路时不断循环</p><p>时间复杂度 一般：<span class="math inline">\(O(m)\)</span>最坏：<span class="math inline">\(O(nm)\)</span></p><h3 id="多源汇最短路floyd算法">多源汇最短路Floyd算法</h3><p>时间复杂度 <span class="math inline">\(O(n^3)\)</span></p><div class="sourceCode" id="cb9"><preclass="sourceCode cpp"><code class="sourceCode cpp"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span><span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstring&gt;</span></span><span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span><span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> N <span class="op">=</span> <span class="dv">300</span><span class="op">;</span></span><span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> n<span class="op">,</span> m<span class="op">,</span> k<span class="op">;</span></span><span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> dist<span class="op">[</span>N<span class="op">][</span>N<span class="op">];</span>  <span class="co">//  注意只需要dist数组，无需g数组</span></span><span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> floyd<span class="op">()</span></span><span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> k <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> k <span class="op">&lt;=</span> n<span class="op">;</span> k <span class="op">++</span> <span class="op">)</span>  <span class="co">// k写在最前面</span></span><span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a>            <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> j <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> j <span class="op">&lt;=</span> n<span class="op">;</span> j <span class="op">++</span> <span class="op">)</span></span><span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a>                dist<span class="op">[</span>i<span class="op">][</span>j<span class="op">]</span> <span class="op">=</span> min<span class="op">(</span>dist<span class="op">[</span>i<span class="op">][</span>j<span class="op">],</span> dist<span class="op">[</span>i<span class="op">][</span>k<span class="op">]</span> <span class="op">+</span> dist<span class="op">[</span>k<span class="op">][</span>j<span class="op">]);</span>  </span><span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 注意是dist[i][k]+dist[k][j]</span></span><span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span><span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">()</span></span><span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a><span class="op">&#123;</span></span><span id="cb9-21"><a href="#cb9-21" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> n <span class="op">&gt;&gt;</span> m <span class="op">&gt;&gt;</span> k<span class="op">;</span></span><span id="cb9-22"><a href="#cb9-22" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">&lt;=</span> n<span class="op">;</span> i <span class="op">++</span> <span class="op">)</span></span><span id="cb9-23"><a href="#cb9-23" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb9-24"><a href="#cb9-24" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span><span class="op">(</span><span class="dt">int</span> j <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> j <span class="op">&lt;=</span> n<span class="op">;</span> j <span class="op">++</span> <span class="op">)</span></span><span id="cb9-25"><a href="#cb9-25" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#123;</span></span><span id="cb9-26"><a href="#cb9-26" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span><span class="op">(</span>i <span class="op">==</span> j<span class="op">)</span>  dist<span class="op">[</span>i<span class="op">][</span>j<span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span>  <span class="co">//  不用memset进行初始化</span></span><span id="cb9-27"><a href="#cb9-27" aria-hidden="true" tabindex="-1"></a>            <span class="co">//  手动初始化使得dist[i][i] = 0</span></span><span id="cb9-28"><a href="#cb9-28" aria-hidden="true" tabindex="-1"></a>            <span class="cf">else</span> dist<span class="op">[</span>i<span class="op">][</span>j<span class="op">]</span> <span class="op">=</span> <span class="bn">0x3f3f3f3f</span><span class="op">;</span></span><span id="cb9-29"><a href="#cb9-29" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span><span id="cb9-30"><a href="#cb9-30" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb9-31"><a href="#cb9-31" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>m <span class="op">--</span> <span class="op">)</span></span><span id="cb9-32"><a href="#cb9-32" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb9-33"><a href="#cb9-33" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">,</span> b<span class="op">,</span> c<span class="op">;</span></span><span id="cb9-34"><a href="#cb9-34" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b <span class="op">&gt;&gt;</span> c<span class="op">;</span></span><span id="cb9-35"><a href="#cb9-35" aria-hidden="true" tabindex="-1"></a>        dist<span class="op">[</span>a<span class="op">][</span>b<span class="op">]</span> <span class="op">=</span> min<span class="op">(</span>dist<span class="op">[</span>a<span class="op">][</span>b<span class="op">],</span> c<span class="op">);</span>  <span class="co">// 重边最小化操作</span></span><span id="cb9-36"><a href="#cb9-36" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb9-37"><a href="#cb9-37" aria-hidden="true" tabindex="-1"></a>    floyd<span class="op">();</span> </span><span id="cb9-38"><a href="#cb9-38" aria-hidden="true" tabindex="-1"></a>    <span class="cf">while</span><span class="op">(</span>k <span class="op">--</span> <span class="op">)</span></span><span id="cb9-39"><a href="#cb9-39" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#123;</span></span><span id="cb9-40"><a href="#cb9-40" aria-hidden="true" tabindex="-1"></a>        <span class="dt">int</span> a<span class="op">,</span> b<span class="op">;</span></span><span id="cb9-41"><a href="#cb9-41" aria-hidden="true" tabindex="-1"></a>        cin <span class="op">&gt;&gt;</span> a <span class="op">&gt;&gt;</span> b<span class="op">;</span></span><span id="cb9-42"><a href="#cb9-42" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>dist<span class="op">[</span>a<span class="op">][</span>b<span class="op">]</span> <span class="op">&gt;</span> <span class="bn">0x3f3f3f3f</span> <span class="op">/</span> <span class="dv">2</span><span class="op">)</span>  printf<span class="op">(</span><span class="st">&quot;impossible</span><span class="sc">\n</span><span class="st">&quot;</span><span class="op">);</span></span><span id="cb9-43"><a href="#cb9-43" aria-hidden="true" tabindex="-1"></a>        <span class="cf">else</span> printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%d\n</span><span class="st">&quot;</span><span class="op">,</span> dist<span class="op">[</span>a<span class="op">][</span>b<span class="op">]);</span></span><span id="cb9-44"><a href="#cb9-44" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span><span id="cb9-45"><a href="#cb9-45" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb9-46"><a href="#cb9-46" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">acwing基础课图论笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="图论" scheme="http://example.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
    <category term="最短路" scheme="http://example.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>为什么我们都在怀念2019</title>
    <link href="http://example.com/2021/04/25/2019/"/>
    <id>http://example.com/2021/04/25/2019/</id>
    <published>2021-04-25T01:13:15.000Z</published>
    <updated>2022-06-27T10:00:04.891Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我们为什么都在怀念2019年">我们为什么都在怀念2019年？</h1><p>2022年，却有越来越多的人想要回到2019。</p><p>2019年，第一批90后即将迈入30岁的那年。</p><p>2018年底，美团创始人王兴在他的饭否主页上发了这样一段话。</p><p><img src="https://s2.loli.net/2022/06/27/cUxrSqLudpNhzPy.png" /></p><p>这句话，当时人们是当赛博笑话看的，或者理解成互联网行业例行裁员前的一次舆论铺垫。</p><p>总而言之，人们绝不相信这就是未来10年最好的一年。</p><p>1</p><p>最好的2019，最坏的2019</p><p>从2019年一开始，大家都开心不起来了。</p><p>农历新年前后，青海玉树遭遇了十年一遇的雪灾。</p><p><img src="https://s2.loli.net/2022/06/27/93izVM8fOGCHZvw.gif" /></p><p>受灾人数近60万，有几万只动物在大雪中被埋。</p><p><img src="https://s2.loli.net/2022/06/27/BLNqFJaP5fUsDC1.png" /></p><p>3月30日，四川木里又突发森林大火。</p><p><img src="https://s2.loli.net/2022/06/27/M7ijCXyOVJ8BPoQ.gif" /></p><p>在这场火灾中，有30位烈士离开了我们，其中最小的消防员年仅18岁。</p><p><img src="https://s2.loli.net/2022/06/27/GDUWpk7LXMRK5fY.png" /></p><p>火，在2019年是一个不祥的符号。</p><p>2019年的人类世界，有很多我们所珍视的东西都毁于火焰。</p><p>4月15日，法国巴黎圣母院发生火灾，整座建筑损毁严重。</p><p><img src="https://s2.loli.net/2022/06/27/RKsZT9qwcL8JklP.png" /></p><p>巴黎圣母院的大火让全世界哗然，由此引申出了许多关于政治、宗教与种族的阴谋论。</p><p>但更多的人只是感到遗憾，毕竟作为全人类的文明遗产，自己也许还没来得及去看看。</p><p>同年，又发生了被称为动画界911的“京都动画”纵火案，许多陪伴过我们的作品，与他们的作者和原稿一起永远留在了京阿尼。</p><p><img src="https://s2.loli.net/2022/06/27/bQkPjfYa7nMec8m.png" /></p><p>有人说这是日本经济社会经济长期下行的必然悲剧，也有人为黑白页面的B站番区吵个没完。</p><p><img src="https://s2.loli.net/2022/06/27/oX61st9VwTyDG7Q.png" /></p><p>再之后，令人绝望的大火又长久地盘踞在亚马逊森林，地球之肺险些被烧穿。</p><p><img src="https://s2.loli.net/2022/06/27/XDUSf8H9CI6QmGr.png" /></p><p>·亚马逊火灾卫星图 图源：NASA</p><p>火，不是2019年唯一的苦难。</p><p>3月10日，埃塞俄比亚航空公司一架全新的波音737MAX8客机在起飞6分钟后坠毁，机上149名乘客和8名机组人员全部罹难。</p><p><img src="https://s2.loli.net/2022/06/27/aMhePs2JbAZDYcn.png" /></p><p>4月21日，斯里兰卡首都先后发生8起连环爆炸案，有253人在这次恐怖袭击中丧生，其中6人是中国公民。</p><p><img src="https://s2.loli.net/2022/06/27/f75C8EDmTuhgpQb.png" /></p><p>我们意识到仇恨也是构成人类文明的一部分，这个被技术和协定包裹起来的世界实则动荡不安。</p><p>但是，2019也并非都是坏消息。</p><p>天气和新闻让人焦虑，但我们却从星空中获得了许多慰藉。</p><p>那一年，嫦娥四号传回了人类首张月球背影，我们终于看清了神秘的月之暗面。</p><p><img src="https://s2.loli.net/2022/06/27/Mjd1ZalghQ2miJI.png" /></p><p>紧接着，《流浪地球》上映，无数走进影院的观众高呼，属于中国人的科幻电影时代终于来了。</p><p><img src="https://s2.loli.net/2022/06/27/48dqYzlh6PZWcpS.png" /></p><p>“北京道路安全委提醒你：道路千万条，安全第一条，行车不规范，亲人两行泪。”这句话在全球被以28种语言播放。</p><p><img src="https://s2.loli.net/2022/06/27/oSd1ULwWFXKZ2lP.png" /></p><p>所以很多人把2019称为“中国科幻电影元年”，不过也有人说是“圆寂”的“圆”，因为那一年还上了一部电影叫《上海堡垒》。</p><p>高兴的不只影迷，还有球迷。</p><p>2019年亚洲杯，中国男足2∶1逆转泰国打进八强，给中国人民打了一剂强心针，网上到处都是国足的精彩进球集锦。</p><p><img src="https://s2.loli.net/2022/06/27/u2P5rleOqUJZn7a.jpg" /></p><p>尽管最终不敌伊朗无缘四强，但赛后队长郑智哽咽着道歉还是感动了很多球迷，大家都觉得我们仍有希望。</p><p>2019年，科比来深圳参加了篮球世界杯的抽签仪式，上千名穿着24号队服的球迷在体育馆外大喊：“科比，生儿子。”<imgsrc="https://s2.loli.net/2022/06/27/3nGWZ58TJc4rl2i.png" /></p><p>其实，2019年的世界体坛并不算太平。</p><p>2019年，世界反兴奋剂机构将俄罗斯从国际体育赛事中驱逐四年，我们第一次知道奥运会可以将一整个国家除名。</p><p><img src="https://s2.loli.net/2022/06/27/yT7IhOqZEkXuUFz.png" /></p><p>“我想我们有理由认为这一决定，是出于政治目的”</p><p>不过，紧张中也有松弛。</p><p>那年7月，俄罗斯与乌克兰交换了双方被扣人员，普京说：“这可以视为两国关系正常化的一个步骤。”</p><p><img src="https://s2.loli.net/2022/06/27/dcHyurwC4B5WO8k.png" /></p><p>如果赵本山的小品《昨天 今天明年》是在2019登上春晚，那我想关于这一块他或许会说：</p><p>“国外比较乱套，成天勾心斗角；今天委内瑞拉脱欧，明天奥国首相被炒；闹完贸易战争，又要弹劾领导；纵观世界风云，风景这边独好。”</p><p><img src="https://s2.loli.net/2022/06/27/HTR38SXMzGUF6Vy.png" /></p><p>“电话门”让特朗普在2019年成为美国第三位被弹劾的总统</p><p><strong>然而，彼时这些宏大风云与隐晦征兆，在我们看来或许更像是模糊的时代噪音。</strong></p><p>随着2019年的天气变暖，人们的内心也开始逐渐回温。</p><p>太阳照常升起，我们依旧期待时代的夜晚。</p><p>2</p><p>重逢的年代，告别的年代</p><p>有人说：“2019年，我度过了人生中最浪漫的一个夏天。”</p><p>蒸汽波、CityPop、低保真，日本泡沫经济时代的审美财富，随着中国人均GDP突破一万美元大关，突然在这一年回潮。</p><p><img src="https://s2.loli.net/2022/06/27/ZbQSIFO3grEmo19.gif" /></p><p>“中 国 人 民 真 蒸 汽” 来自B站UP主@鹿堯River</p><p><img src="https://s2.loli.net/2022/06/27/j4ICA3Xw5dNlUFR.gif" /></p><p>2019年,宝石GEM的《野狼Disco》横空出世，重工业港风和蒜味蒸汽波随着全民短视频热，把东北文艺复兴推向高潮。</p><p>社会镜头也忽然重新关注起后工业时代的乡村与城镇，药厂、下班、失落的商场和学校被冠以土法炼钢的缅怀与幽默，中原青年们说要掀起一场华北浪漫革命。</p><p><img src="https://s2.loli.net/2022/06/27/iHDcxvnuNye5FdJ.png" /></p><p>《平原上的夏洛克》（2019）</p><p><strong>90后所经历的时代开始被浪漫化，属于80后的罗曼蒂克也开始限时返场。</strong></p><p>第六代文艺片导演们，在2019年的夏天到来前集中回到大银幕，把过往时代的伤痕凝结成了精致的文化糖霜。</p><p><img src="https://s2.loli.net/2022/06/27/kGXFA5roWcteRO2.png" /></p><p>《地久天长》（2019）</p><p><img src="https://s2.loli.net/2022/06/27/kGXFA5roWcteRO2.png" /></p><p><strong>曾经的理想主义代言人们，也在2019年频繁亮相。</strong></p><p>像韩寒就拍出了《飞驰人生》，沈腾一脚油门带着中年人的青春飞跃巴音布鲁克的海洋。</p><p><img src="https://s2.loli.net/2022/06/27/QfMhOypBqrPUugE.png" /></p><p>·《飞驰人生》2019</p><p>当然，也有理想主义者在2019年黯然离场。</p><p>2019年，罗永浩正式与锤子科技剥离，老罗欠下了银行、合作伙伴和供应商6个亿。</p><p><img src="https://s2.loli.net/2022/06/27/qEnP1ar2W6dzBbH.png" /></p><p>同年，一个叫李佳琦的年轻人靠直播带货赚到了第1个亿，“Oh myGod，买它！”宣告着社交电商已经成为理想主义者的后半场。</p><p><img src="https://s2.loli.net/2022/06/27/fkAuC4FB2adeE7N.png" /></p><h3 id="年是重逢的一年"><strong>2019年，是重逢的一年。</strong></h3><p>解散十多年的Joyside乐队和达达乐队先后宣布重组。</p><p><img src="https://s2.loli.net/2022/06/27/FZWHKk1gzpUSiJ4.jpg" /></p><p>更令人高兴的是，2019年夏天还有一档叫《乐队的夏天》的节目。</p><p><img src="https://s2.loli.net/2022/06/27/FEDyeXv49a3cWuQ.png" /></p><p>在主流视野外游荡多年的中国摇滚乐，终于等到了一次成功的商业化尝试。</p><p>弥留在94红磡遗梦里的摇滚青年们感叹：“中国摇滚乐终于要出圈了！”没有理想的人们或许从此以后不用再伤心了。</p><p><img src="https://s2.loli.net/2022/06/27/3EvQCLXwc27ZS4D.png" /></p><p>然而，不止摇滚乐，所有在那个夏天里跳舞、饮酒，在现场吹着晚风，拥抱朋友的音乐爱好者们当时大概都没料到——<strong>2019年是时间留给他们的最后窗口了</strong>。</p><p><img src="https://s2.loli.net/2022/06/27/8CYMXkKaf1Wp3wx.png" /></p><h3 id="年也是告别的一年"><strong>2019年，也是告别的一年。</strong></h3><p>漫威宇宙第一纪元在这一年迎来终结，超级英雄们在“<strong>我爱你三千遍</strong>”的口号中下岗再就业。</p><p>电影院外如同过年一样的人潮，似乎已经剧透了灭霸响指的失效。</p><p><img src="https://s2.loli.net/2022/06/27/NYRZ3wJLzTEmpKX.png" /></p><p>当然有些告别就明显少了几分诚意与体面，比如《权力的游戏》。</p><p>一个壮阔的故事草草收场，<strong>似乎给21世纪10年代的“终局”开了个坏头儿</strong>。</p><p><img src="https://s2.loli.net/2022/06/27/zZ9xNhuyHbeg8kX.png" /></p><h3id="这一年很多熟悉的人离开了这个世界">这一年，很多熟悉的人离开了这个世界。</h3><p>“糖丸爷爷”顾方舟、“中国氢弹之父”于敏、散文作家林清玄、建筑大师贝聿铭，演员高以翔、崔雪莉、具荷拉......</p><h4id="他们每个人的离去都带走了我们过往生命中的一部分记忆">他们每个人的离去，都带走了我们过往生命中的一部分记忆。</h4><p>日本声优有本钦隆也在这一年辞世，《海贼王》里由他配音的白胡子在退场的时候说</p><p><img src="https://s2.loli.net/2022/06/27/kXNnpIgazEKrc4d.gif" /></p><p><strong>这一年，还有很多漂亮的故事成了梦幻泡影。</strong></p><p>李晨和范冰冰、文章和马伊琍、贾乃亮和李小璐、郑爽和张恒……分手的分手，离婚的离婚，每天打开微博都会有人“<strong>再也不相信爱情了</strong>”。</p><p>出轨风云的吴秀波、学术造假的翟天临，从此以后人设塌房和吃瓜反转成了当代赛博生活的调味剂。</p><p>而在屏幕之外的广阔天地里，有470万对夫妻选择在这一年结束了他们的婚姻关系，结婚人数则创下了十年新低。</p><p><img src="https://s2.loli.net/2022/06/27/x1SFKqB9Lv6wkdC.png" /></p><p>2019年，第一批90后即将迈入30岁。</p><p>然而他们发现，他们没能拥有一个而立的时代。</p><p>758万高校毕业生走出象牙塔，他们成了10年代最后一批能自由进行毕业旅行的年轻人。</p><p>在毕业前夕，他们也第一次听到Jack Ma提及“996是福报”，第一次听RichardLiu说“混日子的人不是我的兄弟”。</p><p>相比第二年未经心理按摩就被投入“<strong>内卷</strong>”大潮中的874万学妹学弟，不知他们是幸运的还是不幸的。</p><p><img src="https://s2.loli.net/2022/06/27/yYplJ9Kx216hOVa.png" /></p><p>2019年的最后一个月，大学生在想着offer和简历，上班族已经开始计算春运抢票的日期。</p><p>面对即将到来的2020，他们都写下了自己对一年的祝愿和期许。</p><p><strong>有些关于生活和爱情，有些关于穿越世界的旅行。</strong></p><p><img src="https://s2.loli.net/2022/06/27/PTUqXudN5f9S7FG.jpg" /></p><p>12月30日晚，网络上忽然蹦出一个在当时看来不太起眼的热搜：</p><h3 id="武汉发现不明原因肺炎">#武汉发现不明原因肺炎</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;我们为什么都在怀念2019年&quot;&gt;我们为什么都在怀念2019年？&lt;/h1&gt;
&lt;p&gt;2022年，却有越来越多的人想要回到2019。&lt;/p&gt;
&lt;p&gt;2019年，第一批90后即将迈入30岁的那年。&lt;/p&gt;
&lt;p&gt;2018年底，美团创始人王兴在他的饭否主页上发了这样一</summary>
      
    
    
    
    <category term="随想" scheme="http://example.com/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="思考" scheme="http://example.com/tags/%E6%80%9D%E8%80%83/"/>
    
    <category term="深夜" scheme="http://example.com/tags/%E6%B7%B1%E5%A4%9C/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Theme-Sakura</title>
    <link href="http://example.com/2018/12/12/Sakura%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2018/12/12/Sakura%E6%95%99%E7%A8%8B/</id>
    <published>2018-12-12T14:16:01.000Z</published>
    <updated>2022-06-27T11:43:17.419Z</updated>
    
    <content type="html"><![CDATA[<p>hexo-theme-sakura 主题 <ahref="https://github.com/honjun/hexo-theme-sakura/blob/master/README.md">Englishdocument</a></p><p>基于 WordPress 主题<ahref="https://github.com/mashirozx/Sakura/">Sakura</a>修改成 Hexo的主题。</p><p><a href="https://sakura.hojun.cn">demo 预览</a></p><p>正在开发中......</p><p><imgsrc="https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg" /></p><h2 id="交流群">交流群</h2><p>若你是使用者，加群 QQ: 801511924</p><p>若你是创作者，加群 QQ: 194472590</p><h2 id="主题特性">主题特性</h2><ul><li>首页大屏视频</li><li>首页随机封面</li><li>图片懒加载</li><li>valine 评论</li><li>fancy-box 相册</li><li>pjax 支持，音乐不间断</li><li>aplayer 音乐播放器</li><li>多级导航菜单（按现在大部分 hexo 主题来说，这也算是个特性了）</li></ul><h2 id="赞赏作者">赞赏作者</h2><p>如果喜欢 hexo-theme-sakura 主题，可以考虑资助一下哦~非常感激！</p><p><a href="https://www.paypal.me/hojuncn">paypal</a> | <ahref="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg">Alipay支付宝</a> | <ahref="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg">WeChatPay 微信支付</a></p><h2 id="未完善的使用教程">未完善的使用教程</h2><p>那啥？老实说我目前也不是很有条理 233333333~</p><h2 id="主题下载安装">1、主题下载安装</h2><p><ahref="https://github.com/honjun/hexo-theme-sakura">hexo-theme-sakura</a>建议下载压缩包格式，因为除了主题内容还有些 source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。</p><p>下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行<code>npm i</code>安装 依赖。</p><h2 id="主题配置">2、主题配置</h2><h3 id="博客根目录下的_config-配置">博客根目录下的_config 配置</h3><p>站点</p><div class="sourceCode" id="cb1"><preclass="sourceCode yml"><code class="sourceCode yaml"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co"># Site</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="fu">title</span><span class="kw">:</span><span class="at"> 你的站点名</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="fu">subtitle</span><span class="kw">:</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="fu">description</span><span class="kw">:</span><span class="at"> 站点简介</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="fu">keywords</span><span class="kw">:</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="fu">author</span><span class="kw">:</span><span class="at"> 作者名</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="fu">language</span><span class="kw">:</span><span class="at"> zh-cn</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="fu">timezone</span><span class="kw">:</span></span></code></pre></div><p>部署</p><div class="sourceCode" id="cb2"><preclass="sourceCode yml"><code class="sourceCode yaml"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">deploy</span><span class="kw">:</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">type</span><span class="kw">:</span><span class="at"> git</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">repo</span><span class="kw">:</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">github</span><span class="kw">:</span><span class="at"> 你的github仓库地址</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="co">    # coding: 你的coding仓库地址</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">branch</span><span class="kw">:</span><span class="at"> master</span></span></code></pre></div><p>备份 （使用 hexo b 发布备份到远程仓库）</p><div class="sourceCode" id="cb3"><preclass="sourceCode yml"><code class="sourceCode yaml"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">backup</span><span class="kw">:</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">type</span><span class="kw">:</span><span class="at"> git</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">message</span><span class="kw">:</span><span class="at"> backup my blog of https://honjun.github.io/</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">repository</span><span class="kw">:</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="co">    # 你的github仓库地址,备份分支名  （建议新建backup分支）</span></span><span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">github</span><span class="kw">:</span><span class="at"> https://github.com/honjun/honjun.github.io.git,backup</span></span><span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="co">    # coding: https://git.coding.net/hojun/hojun.git,backup</span></span></code></pre></div><h3 id="主题目录下的_config-配置">主题目录下的_config 配置</h3><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分</p><div class="sourceCode" id="cb4"><preclass="sourceCode yml"><code class="sourceCode yaml"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="co"># site name</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="co"># 站点名 【改】</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="fu">prefixName</span><span class="kw">:</span><span class="at"> さくら荘その</span></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="fu">siteName</span><span class="kw">:</span><span class="at"> hojun</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="co"># favicon and site master avatar</span></span><span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="co"># 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】</span></span><span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="fu">favicon</span><span class="kw">:</span><span class="at"> /images/favicon.ico</span></span><span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a><span class="fu">avatar</span><span class="kw">:</span><span class="at"> /img/custom/avatar.jpg</span></span><span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="co"># 站点url 【改】</span></span><span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="fu">url</span><span class="kw">:</span><span class="at"> https://sakura.hojun.cn</span></span><span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a><span class="co"># 站点介绍（或者说是个人签名）【改】</span></span><span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="fu">description</span><span class="kw">:</span><span class="at"> Live your life with passion! With some drive!</span></span><span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a><span class="co"># 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg</span></span><span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a><span class="fu">cdn</span><span class="kw">:</span><span class="at"> https://cdn.jsdelivr.net/gh/honjun/cdn@1.6</span></span><span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a><span class="co"># 开启pjax 【选】</span></span><span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a><span class="fu">pjax</span><span class="kw">:</span><span class="at"> </span><span class="dv">1</span></span><span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a><span class="co"># 站点首页的公告信息 【改】</span></span><span id="cb4-24"><a href="#cb4-24" aria-hidden="true" tabindex="-1"></a><span class="fu">notice</span><span class="kw">:</span><span class="at"> hexo-Sakura主题已经开源，目前正在开发中...</span></span><span id="cb4-25"><a href="#cb4-25" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-26"><a href="#cb4-26" aria-hidden="true" tabindex="-1"></a><span class="co"># 懒加载的加载中图片 【选】</span></span><span id="cb4-27"><a href="#cb4-27" aria-hidden="true" tabindex="-1"></a><span class="fu">lazyloadImg</span><span class="kw">:</span><span class="at"> https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg</span></span><span id="cb4-28"><a href="#cb4-28" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-29"><a href="#cb4-29" aria-hidden="true" tabindex="-1"></a><span class="co"># 站点菜单配置 【选】</span></span><span id="cb4-30"><a href="#cb4-30" aria-hidden="true" tabindex="-1"></a><span class="fu">menus</span><span class="kw">:</span></span><span id="cb4-31"><a href="#cb4-31" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">首页</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-fort-awesome faa-shake </span><span class="kw">&#125;</span></span><span id="cb4-32"><a href="#cb4-32" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">归档</span><span class="kw">:</span></span><span id="cb4-33"><a href="#cb4-33" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="kw">&#123;</span></span><span id="cb4-34"><a href="#cb4-34" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /archives</span><span class="kw">,</span></span><span id="cb4-35"><a href="#cb4-35" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-archive faa-shake</span><span class="kw">,</span></span><span id="cb4-36"><a href="#cb4-36" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">submenus</span><span class="kw">:</span></span><span id="cb4-37"><a href="#cb4-37" aria-hidden="true" tabindex="-1"></a><span class="at">        &#123;</span></span><span id="cb4-38"><a href="#cb4-38" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">技术</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /categories/技术/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-code </span><span class="kw">&#125;,</span></span><span id="cb4-39"><a href="#cb4-39" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">生活</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /categories/生活/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-file-text-o </span><span class="kw">&#125;,</span></span><span id="cb4-40"><a href="#cb4-40" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">资源</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /categories/资源/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-cloud-download </span><span class="kw">&#125;,</span></span><span id="cb4-41"><a href="#cb4-41" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">随想</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /categories/随想/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-commenting-o </span><span class="kw">&#125;,</span></span><span id="cb4-42"><a href="#cb4-42" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">转载</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /categories/转载/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-book </span><span class="kw">&#125;,</span></span><span id="cb4-43"><a href="#cb4-43" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="kw">&#125;</span><span class="at">,</span></span><span id="cb4-44"><a href="#cb4-44" aria-hidden="true" tabindex="-1"></a><span class="at">    &#125;</span></span><span id="cb4-45"><a href="#cb4-45" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">清单</span><span class="kw">:</span></span><span id="cb4-46"><a href="#cb4-46" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="kw">&#123;</span></span><span id="cb4-47"><a href="#cb4-47" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">path</span><span class="kw">:</span><span class="at"> javascript:;</span><span class="kw">,</span></span><span id="cb4-48"><a href="#cb4-48" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-list-ul faa-vertical</span><span class="kw">,</span></span><span id="cb4-49"><a href="#cb4-49" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">submenus</span><span class="kw">:</span></span><span id="cb4-50"><a href="#cb4-50" aria-hidden="true" tabindex="-1"></a><span class="at">        &#123;</span></span><span id="cb4-51"><a href="#cb4-51" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">书单</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /tags/悦读/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-th-list faa-bounce </span><span class="kw">&#125;,</span></span><span id="cb4-52"><a href="#cb4-52" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">番组</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /bangumi/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-film faa-vertical </span><span class="kw">&#125;,</span></span><span id="cb4-53"><a href="#cb4-53" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">歌单</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /music/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-headphones </span><span class="kw">&#125;,</span></span><span id="cb4-54"><a href="#cb4-54" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">图集</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /tags/图集/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-photo </span><span class="kw">&#125;,</span></span><span id="cb4-55"><a href="#cb4-55" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="kw">&#125;</span><span class="at">,</span></span><span id="cb4-56"><a href="#cb4-56" aria-hidden="true" tabindex="-1"></a><span class="at">    &#125;</span></span><span id="cb4-57"><a href="#cb4-57" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">留言板</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /comment/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-pencil-square-o faa-tada </span><span class="kw">&#125;</span></span><span id="cb4-58"><a href="#cb4-58" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">友人帐</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /links/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-link faa-shake </span><span class="kw">&#125;</span></span><span id="cb4-59"><a href="#cb4-59" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">赞赏</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /donate/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-heart faa-pulse </span><span class="kw">&#125;</span></span><span id="cb4-60"><a href="#cb4-60" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">关于</span><span class="kw">:</span></span><span id="cb4-61"><a href="#cb4-61" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="kw">&#123;</span></span><span id="cb4-62"><a href="#cb4-62" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /</span><span class="kw">,</span></span><span id="cb4-63"><a href="#cb4-63" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-leaf faa-wrench</span><span class="kw">,</span></span><span id="cb4-64"><a href="#cb4-64" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">submenus</span><span class="kw">:</span></span><span id="cb4-65"><a href="#cb4-65" aria-hidden="true" tabindex="-1"></a><span class="at">        &#123;</span></span><span id="cb4-66"><a href="#cb4-66" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">我？</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /about/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-meetup </span><span class="kw">&#125;,</span></span><span id="cb4-67"><a href="#cb4-67" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">主题</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /theme-sakura/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> iconfont icon-sakura </span><span class="kw">&#125;,</span></span><span id="cb4-68"><a href="#cb4-68" aria-hidden="true" tabindex="-1"></a><span class="at">          </span><span class="fu">Lab</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /lab/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-cogs </span><span class="kw">&#125;,</span></span><span id="cb4-69"><a href="#cb4-69" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="kw">&#125;</span><span class="at">,</span></span><span id="cb4-70"><a href="#cb4-70" aria-hidden="true" tabindex="-1"></a><span class="at">    &#125;</span></span><span id="cb4-71"><a href="#cb4-71" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">客户端</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /client/</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-android faa-vertical </span><span class="kw">&#125;</span></span><span id="cb4-72"><a href="#cb4-72" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">RSS</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">path</span><span class="kw">:</span><span class="at"> /atom.xml</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-rss faa-pulse </span><span class="kw">&#125;</span></span><span id="cb4-73"><a href="#cb4-73" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-74"><a href="#cb4-74" aria-hidden="true" tabindex="-1"></a><span class="co"># Home page sort type: -1: newer first，1: older first. 【非】</span></span><span id="cb4-75"><a href="#cb4-75" aria-hidden="true" tabindex="-1"></a><span class="fu">homePageSortType</span><span class="kw">:</span><span class="at"> </span><span class="dv">-1</span></span><span id="cb4-76"><a href="#cb4-76" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-77"><a href="#cb4-77" aria-hidden="true" tabindex="-1"></a><span class="co"># Home page article shown number) 【非】</span></span><span id="cb4-78"><a href="#cb4-78" aria-hidden="true" tabindex="-1"></a><span class="fu">homeArticleShown</span><span class="kw">:</span><span class="at"> </span><span class="dv">10</span></span><span id="cb4-79"><a href="#cb4-79" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-80"><a href="#cb4-80" aria-hidden="true" tabindex="-1"></a><span class="co"># 背景图片 【选】</span></span><span id="cb4-81"><a href="#cb4-81" aria-hidden="true" tabindex="-1"></a><span class="fu">bgn</span><span class="kw">:</span><span class="at"> </span><span class="dv">8</span></span><span id="cb4-82"><a href="#cb4-82" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-83"><a href="#cb4-83" aria-hidden="true" tabindex="-1"></a><span class="co"># startdash面板 url, title, desc img 【改】</span></span><span id="cb4-84"><a href="#cb4-84" aria-hidden="true" tabindex="-1"></a><span class="fu">startdash</span><span class="kw">:</span></span><span id="cb4-85"><a href="#cb4-85" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="kw">-</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> /theme-sakura/</span><span class="kw">,</span><span class="at"> </span><span class="fu">title</span><span class="kw">:</span><span class="at"> Sakura</span><span class="kw">,</span><span class="at"> </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> 本站 hexo 主题</span><span class="kw">,</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> /img/startdash/sakura.md.png </span><span class="kw">&#125;</span></span><span id="cb4-86"><a href="#cb4-86" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="kw">-</span><span class="at"> </span><span class="kw">&#123;</span></span><span id="cb4-87"><a href="#cb4-87" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">url</span><span class="kw">:</span><span class="at"> http://space.bilibili.com/271849279</span><span class="kw">,</span></span><span id="cb4-88"><a href="#cb4-88" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">title</span><span class="kw">:</span><span class="at"> Bilibili</span><span class="kw">,</span></span><span id="cb4-89"><a href="#cb4-89" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> 博主的b站视频</span><span class="kw">,</span></span><span id="cb4-90"><a href="#cb4-90" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="fu">img</span><span class="kw">:</span><span class="at"> /img/startdash/bilibili.jpg</span><span class="kw">,</span></span><span id="cb4-91"><a href="#cb4-91" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="kw">&#125;</span></span><span id="cb4-92"><a href="#cb4-92" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="kw">-</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> /</span><span class="kw">,</span><span class="at"> </span><span class="fu">title</span><span class="kw">:</span><span class="at"> hojun的万事屋</span><span class="kw">,</span><span class="at"> </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> 技术服务</span><span class="kw">,</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> /img/startdash/wangshiwu.jpg </span><span class="kw">&#125;</span></span><span id="cb4-93"><a href="#cb4-93" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-94"><a href="#cb4-94" aria-hidden="true" tabindex="-1"></a><span class="co"># your site build time or founded date</span></span><span id="cb4-95"><a href="#cb4-95" aria-hidden="true" tabindex="-1"></a><span class="co"># 你的站点建立日期 【改】</span></span><span id="cb4-96"><a href="#cb4-96" aria-hidden="true" tabindex="-1"></a><span class="fu">siteBuildingTime</span><span class="kw">:</span><span class="at"> 07/17/2018</span></span><span id="cb4-97"><a href="#cb4-97" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-98"><a href="#cb4-98" aria-hidden="true" tabindex="-1"></a><span class="co"># 社交按钮(social)  url, img PC端配置 【改】</span></span><span id="cb4-99"><a href="#cb4-99" aria-hidden="true" tabindex="-1"></a><span class="fu">social</span><span class="kw">:</span></span><span id="cb4-100"><a href="#cb4-100" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">github</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> http://github.com/honjun</span><span class="kw">,</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> /img/social/github.png </span><span class="kw">&#125;</span></span><span id="cb4-101"><a href="#cb4-101" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">sina</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> http://weibo.com/mashirozx?is_all=1</span><span class="kw">,</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> /img/social/sina.png </span><span class="kw">&#125;</span></span><span id="cb4-102"><a href="#cb4-102" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">wangyiyun</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> http://weibo.com/mashirozx?is_all=1</span><span class="kw">,</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> /img/social/wangyiyun.png </span><span class="kw">&#125;</span></span><span id="cb4-103"><a href="#cb4-103" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">zhihu</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> http://weibo.com/mashirozx?is_all=1</span><span class="kw">,</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> /img/social/zhihu.png </span><span class="kw">&#125;</span></span><span id="cb4-104"><a href="#cb4-104" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">email</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> http://weibo.com/mashirozx?is_all=1</span><span class="kw">,</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> /img/social/email.svg </span><span class="kw">&#125;</span></span><span id="cb4-105"><a href="#cb4-105" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">wechat</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> /</span><span class="co">#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png &#125;</span></span><span id="cb4-106"><a href="#cb4-106" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-107"><a href="#cb4-107" aria-hidden="true" tabindex="-1"></a><span class="co"># 社交按钮(msocial)  url, img 移动端配置 【改】</span></span><span id="cb4-108"><a href="#cb4-108" aria-hidden="true" tabindex="-1"></a><span class="at">msocial:</span></span><span id="cb4-109"><a href="#cb4-109" aria-hidden="true" tabindex="-1"></a><span class="at">  github: &#123; url: http://github.com/honjun</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-github</span><span class="kw">,</span><span class="at"> </span><span class="fu">color</span><span class="kw">:</span><span class="at"> </span><span class="dv">333</span><span class="at"> </span><span class="kw">&#125;</span></span><span id="cb4-110"><a href="#cb4-110" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">weibo</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> http://weibo.com/mashirozx?is_all=1</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-weibo</span><span class="kw">,</span><span class="at"> </span><span class="fu">color</span><span class="kw">:</span><span class="at"> dd4b39 </span><span class="kw">&#125;</span></span><span id="cb4-111"><a href="#cb4-111" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">qq</span><span class="kw">:</span><span class="at"> </span><span class="kw">&#123;</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes</span><span class="kw">,</span><span class="at"> </span><span class="fu">fa</span><span class="kw">:</span><span class="at"> fa-qq</span><span class="kw">,</span><span class="at"> </span><span class="fu">color</span><span class="kw">:</span><span class="at"> 25c6fe </span><span class="kw">&#125;</span></span><span id="cb4-112"><a href="#cb4-112" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-113"><a href="#cb4-113" aria-hidden="true" tabindex="-1"></a><span class="co"># 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】</span></span><span id="cb4-114"><a href="#cb4-114" aria-hidden="true" tabindex="-1"></a><span class="fu">donate</span><span class="kw">:</span></span><span id="cb4-115"><a href="#cb4-115" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">alipay</span><span class="kw">:</span><span class="at"> /img/custom/donate/AliPayQR.jpg</span></span><span id="cb4-116"><a href="#cb4-116" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">wechat</span><span class="kw">:</span><span class="at"> /img/custom/donate/WeChanQR.jpg</span></span><span id="cb4-117"><a href="#cb4-117" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">wechatSQ</span><span class="kw">:</span><span class="at"> /img/custom/donate/WeChanSQ.jpg</span></span><span id="cb4-118"><a href="#cb4-118" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-119"><a href="#cb4-119" aria-hidden="true" tabindex="-1"></a><span class="co"># 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】</span></span><span id="cb4-120"><a href="#cb4-120" aria-hidden="true" tabindex="-1"></a><span class="fu">movies</span><span class="kw">:</span></span><span id="cb4-121"><a href="#cb4-121" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">url</span><span class="kw">:</span><span class="at"> https://cdn.jsdelivr.net/gh/honjun/hojun@1.2</span></span><span id="cb4-122"><a href="#cb4-122" aria-hidden="true" tabindex="-1"></a><span class="co">  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用</span></span><span id="cb4-123"><a href="#cb4-123" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">name</span><span class="kw">:</span><span class="at"> Unbroken.mp4</span></span><span id="cb4-124"><a href="#cb4-124" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-125"><a href="#cb4-125" aria-hidden="true" tabindex="-1"></a><span class="co"># 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】</span></span><span id="cb4-126"><a href="#cb4-126" aria-hidden="true" tabindex="-1"></a><span class="fu">aplayer</span><span class="kw">:</span></span><span id="cb4-127"><a href="#cb4-127" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">id</span><span class="kw">:</span><span class="at"> </span><span class="dv">2660651585</span></span><span id="cb4-128"><a href="#cb4-128" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">server</span><span class="kw">:</span><span class="at"> netease</span></span><span id="cb4-129"><a href="#cb4-129" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">type</span><span class="kw">:</span><span class="at"> playlist</span></span><span id="cb4-130"><a href="#cb4-130" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">fixed</span><span class="kw">:</span><span class="at"> </span><span class="ch">true</span></span><span id="cb4-131"><a href="#cb4-131" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">mini</span><span class="kw">:</span><span class="at"> </span><span class="ch">false</span></span><span id="cb4-132"><a href="#cb4-132" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">autoplay</span><span class="kw">:</span><span class="at"> </span><span class="ch">false</span></span><span id="cb4-133"><a href="#cb4-133" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">loop</span><span class="kw">:</span><span class="at"> all</span></span><span id="cb4-134"><a href="#cb4-134" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">order</span><span class="kw">:</span><span class="at"> random</span></span><span id="cb4-135"><a href="#cb4-135" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">preload</span><span class="kw">:</span><span class="at"> auto</span></span><span id="cb4-136"><a href="#cb4-136" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">volume</span><span class="kw">:</span><span class="at"> </span><span class="fl">0.7</span></span><span id="cb4-137"><a href="#cb4-137" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">mutex</span><span class="kw">:</span><span class="at"> </span><span class="ch">true</span></span><span id="cb4-138"><a href="#cb4-138" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-139"><a href="#cb4-139" aria-hidden="true" tabindex="-1"></a><span class="co"># Valine评论配置【改】</span></span><span id="cb4-140"><a href="#cb4-140" aria-hidden="true" tabindex="-1"></a><span class="fu">valine</span><span class="kw">:</span><span class="at"> </span><span class="ch">true</span></span><span id="cb4-141"><a href="#cb4-141" aria-hidden="true" tabindex="-1"></a><span class="fu">v_appId</span><span class="kw">:</span><span class="at"> GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz</span></span><span id="cb4-142"><a href="#cb4-142" aria-hidden="true" tabindex="-1"></a><span class="fu">v_appKey</span><span class="kw">:</span><span class="at"> mgOpfzbkHYqU92CV4IDlAUHQ</span></span></code></pre></div><h2 id="分类页和标签页配置">分类页和标签页配置</h2><h3 id="分类页">分类页</h3><p><imgsrc="https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg" /></p><h3 id="标签页">标签页</h3><p><imgsrc="https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg" /></p><p>配置项在-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把 404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以 issue或群里提出来），现在是没设置的话会使用那种倒立小狗 404 哦。</p><div class="sourceCode" id="cb5"><preclass="sourceCode yml"><code class="sourceCode yaml"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="co">#category</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="co"># 按分类名创建</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="fu">技术</span><span class="kw">:</span></span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="co">  #中文标题</span></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">zh</span><span class="kw">:</span><span class="at"> 野生技术协会</span></span><span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="co">  # 英文标题</span></span><span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">en</span><span class="kw">:</span><span class="at"> Geek – Only for Love</span></span><span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="co">  # 封面图片</span></span><span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg</span></span><span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="fu">生活</span><span class="kw">:</span></span><span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">zh</span><span class="kw">:</span><span class="at"> 生活</span></span><span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">en</span><span class="kw">:</span><span class="at"> live</span></span><span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg</span></span><span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a><span class="co">#tag</span></span><span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a><span class="co"># 标签名即是标题</span></span><span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a><span class="fu">悦读</span><span class="kw">:</span></span><span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a><span class="co">  # 封面图片</span></span><span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg</span></span></code></pre></div><h2 id="单页面封面配置">单页面封面配置</h2><p><imgsrc="https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg" />如留言板页面页面，位于 source 下的 comment 下，打开 index.md 如下：</p><div class="sourceCode" id="cb6"><pre class="sourceCode md"><code class="sourceCode markdown"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co">---</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="an">title:</span><span class="co"> comment</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="an">date:</span><span class="co"> 2018-12-20 23:13:48</span></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="an">keywords:</span><span class="co"> 留言板</span></span><span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="an">description:</span></span><span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="an">comments:</span><span class="co"> true</span></span><span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a><span class="co"># 在这里配置单页面头部图片，自定义替换哦~</span></span><span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a><span class="an">photos:</span><span class="co"> https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg</span></span><span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a><span class="co">---</span></span></code></pre></div><h2 id="单页面配置">单页面配置</h2><h3id="番组计划页-请直接在下载后的文件中改下面的添加了注释可能会有些影响">番组计划页（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><imgsrc="https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg" /></p><div class="sourceCode" id="cb7"><preclass="sourceCode yml"><code class="sourceCode yaml"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="pp">---</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="fu">layout</span><span class="kw">:</span><span class="at"> bangumi</span></span><span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="fu">title</span><span class="kw">:</span><span class="at"> bangumi</span></span><span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a><span class="fu">comments</span><span class="kw">:</span><span class="at"> </span><span class="ch">false</span></span><span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="fu">date</span><span class="kw">:</span><span class="at"> 2019-02-10 21:32:48</span></span><span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="fu">keywords</span><span class="kw">:</span></span><span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a><span class="fu">description</span><span class="kw">:</span></span><span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a><span class="fu">bangumis</span><span class="kw">:</span></span><span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a><span class="co">  # 番组图片</span></span><span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="kw">-</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg</span></span><span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a><span class="co">  # 番组名</span></span><span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">title</span><span class="kw">:</span><span class="at"> 朝花夕誓——于离别之朝束起约定之花</span></span><span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a><span class="co">  # 追番状态 （追番ing/已追完）</span></span><span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">status</span><span class="kw">:</span><span class="at"> 已追完</span></span><span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a><span class="co">  # 追番进度</span></span><span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">progress</span><span class="kw">:</span><span class="at"> </span><span class="dv">100</span></span><span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a><span class="co">  # 番剧日文名称</span></span><span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">jp</span><span class="kw">:</span><span class="at"> さよならの朝に約束の花をかざろう</span></span><span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a><span class="co">  # 放送时间</span></span><span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">time</span><span class="kw">:</span><span class="at"> 放送时间: 2018-02-24 SUN.</span></span><span id="cb7-21"><a href="#cb7-21" aria-hidden="true" tabindex="-1"></a><span class="co">  # 番剧介绍</span></span><span id="cb7-22"><a href="#cb7-22" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">desc</span><span class="kw">:</span><span class="at">  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。</span></span><span id="cb7-23"><a href="#cb7-23" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="kw">-</span><span class="at"> </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg</span></span><span id="cb7-24"><a href="#cb7-24" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">title</span><span class="kw">:</span><span class="at"> 朝花夕誓——于离别之朝束起约定之花</span></span><span id="cb7-25"><a href="#cb7-25" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">status</span><span class="kw">:</span><span class="at"> 已追完</span></span><span id="cb7-26"><a href="#cb7-26" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">progress</span><span class="kw">:</span><span class="at"> </span><span class="dv">50</span></span><span id="cb7-27"><a href="#cb7-27" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">jp</span><span class="kw">:</span><span class="at"> さよならの朝に約束の花をかざろう</span></span><span id="cb7-28"><a href="#cb7-28" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">time</span><span class="kw">:</span><span class="at"> 放送时间: 2018-02-24 SUN.</span></span><span id="cb7-29"><a href="#cb7-29" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。</span></span><span id="cb7-30"><a href="#cb7-30" aria-hidden="true" tabindex="-1"></a><span class="pp">---</span></span></code></pre></div><h3id="友链页-请直接在下载后的文件中改下面的添加了注释可能会有些影响">友链页（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><imgsrc="https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg" /></p><div class="sourceCode" id="cb8"><preclass="sourceCode yml"><code class="sourceCode yaml"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="pp">---</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="fu">layout</span><span class="kw">:</span><span class="at"> links</span></span><span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="fu">title</span><span class="kw">:</span><span class="at"> links</span></span><span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a><span class="co"># 创建日期，可以改下</span></span><span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="fu">date</span><span class="kw">:</span><span class="at"> 2018-12-19 23:11:06</span></span><span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a><span class="co"># 图片上的标题，自定义修改</span></span><span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="fu">keywords</span><span class="kw">:</span><span class="at"> 友人帐</span></span><span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a><span class="fu">description</span><span class="kw">:</span></span><span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a><span class="co"># true/false 开启/关闭评论</span></span><span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a><span class="fu">comments</span><span class="kw">:</span><span class="at"> </span><span class="ch">true</span></span><span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a><span class="co"># 页面头部图片，自定义修改</span></span><span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a><span class="fu">photos</span><span class="kw">:</span><span class="at"> https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg</span></span><span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a><span class="co"># 友链配置</span></span><span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a><span class="fu">links</span><span class="kw">:</span></span><span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a><span class="co">  # 类型分组</span></span><span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="kw">-</span><span class="at"> </span><span class="fu">group</span><span class="kw">:</span><span class="at"> 个人项目</span></span><span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a><span class="co">    # 类型简介</span></span><span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a><span class="fu">    desc</span><span class="kw">: </span><span class="at">充分说明这家伙是条咸鱼 &lt; (￣︶￣)</span><span class="ch">&gt;</span></span><span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">items</span><span class="kw">:</span></span><span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a><span class="co">      # 友链链接</span></span><span id="cb8-21"><a href="#cb8-21" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="kw">-</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> https://shino.cc/fgvf</span></span><span id="cb8-22"><a href="#cb8-22" aria-hidden="true" tabindex="-1"></a><span class="co">        # 友链头像</span></span><span id="cb8-23"><a href="#cb8-23" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://cloud.moezx.cc/Picture/svg/landscape/fields.svg</span></span><span id="cb8-24"><a href="#cb8-24" aria-hidden="true" tabindex="-1"></a><span class="co">        # 友链站点名</span></span><span id="cb8-25"><a href="#cb8-25" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">name</span><span class="kw">:</span><span class="at"> Google</span></span><span id="cb8-26"><a href="#cb8-26" aria-hidden="true" tabindex="-1"></a><span class="co">        # 友链介绍  下面雷同</span></span><span id="cb8-27"><a href="#cb8-27" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> Google 镜像</span></span><span id="cb8-28"><a href="#cb8-28" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="kw">-</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> https://shino.cc/fgvf</span></span><span id="cb8-29"><a href="#cb8-29" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://cloud.moezx.cc/Picture/svg/landscape/fields.svg</span></span><span id="cb8-30"><a href="#cb8-30" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">name</span><span class="kw">:</span><span class="at"> Google</span></span><span id="cb8-31"><a href="#cb8-31" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> Google 镜像</span></span><span id="cb8-32"><a href="#cb8-32" aria-hidden="true" tabindex="-1"></a><span class="co">  # 类型分组...</span></span><span id="cb8-33"><a href="#cb8-33" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="kw">-</span><span class="at"> </span><span class="fu">group</span><span class="kw">:</span><span class="at"> 小伙伴们</span></span><span id="cb8-34"><a href="#cb8-34" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> 欢迎交换友链 ꉂ(ˊᗜˋ)</span></span><span id="cb8-35"><a href="#cb8-35" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">items</span><span class="kw">:</span></span><span id="cb8-36"><a href="#cb8-36" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="kw">-</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> https://shino.cc/fgvf</span></span><span id="cb8-37"><a href="#cb8-37" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://cloud.moezx.cc/Picture/svg/landscape/fields.svg</span></span><span id="cb8-38"><a href="#cb8-38" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">name</span><span class="kw">:</span><span class="at"> Google</span></span><span id="cb8-39"><a href="#cb8-39" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> Google 镜像</span></span><span id="cb8-40"><a href="#cb8-40" aria-hidden="true" tabindex="-1"></a><span class="at">      </span><span class="kw">-</span><span class="at"> </span><span class="fu">url</span><span class="kw">:</span><span class="at"> https://shino.cc/fgvf</span></span><span id="cb8-41"><a href="#cb8-41" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">img</span><span class="kw">:</span><span class="at"> https://cloud.moezx.cc/Picture/svg/landscape/fields.svg</span></span><span id="cb8-42"><a href="#cb8-42" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">name</span><span class="kw">:</span><span class="at"> Google</span></span><span id="cb8-43"><a href="#cb8-43" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="fu">desc</span><span class="kw">:</span><span class="at"> Google 镜像</span></span><span id="cb8-44"><a href="#cb8-44" aria-hidden="true" tabindex="-1"></a><span class="pp">---</span></span></code></pre></div><h2 id="写文章配置">写文章配置</h2><p>主题集成了个人插件 hexo-tag-bili 和 hexo-tag-fancybox_img。其中hexo-tag-bili 用来在文章或单页面中插 入 B 站外链视频，使用语法如下：</p><div class="sourceCode" id="cb9"><pre class="sourceCode md"><code class="sourceCode markdown"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="co">&#123;% bili video_id [page] %&#125;</span></span></code></pre></div><p>详细使用教程详 见<ahref="https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md">hexo-tag-bili</a>。</p><p>hexo-tag-fancybox_img 用来在文章或单页面中图片，使用语法如下：</p><div class="sourceCode" id="cb10"><preclass="sourceCode md"><code class="sourceCode markdown"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="co">&#123;% fb_img src [caption] %&#125;</span></span></code></pre></div><p>详细使用教程详 见<ahref="https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md">hexo-tag-fancybox_img</a></p><h2 id="还有啥一时想不起来">还有啥，一时想不起来</h2><p>To be continued...</p>]]></content>
    
    
    <summary type="html">hexo-sakura主题使用教程</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="web" scheme="http://example.com/tags/web/"/>
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
